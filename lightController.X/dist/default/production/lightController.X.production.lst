

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Fri Oct 04 14:13:00 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F690
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     8                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F690 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0004                     fsr             equ	4
    49     0004                     fsr0            equ	4
    50     0000                     indf            equ	0
    51     0000                     indf0           equ	0
    52     0002                     pc              equ	2
    53     0002                     pcl             equ	2
    54     000A                     pclath          equ	10
    55     0003                     status          equ	3
    56     0000                     INDF            equ	0	;# 
    57     0001                     TMR0            equ	1	;# 
    58     0002                     PCL             equ	2	;# 
    59     0003                     STATUS          equ	3	;# 
    60     0004                     FSR             equ	4	;# 
    61     0005                     PORTA           equ	5	;# 
    62     0006                     PORTB           equ	6	;# 
    63     0007                     PORTC           equ	7	;# 
    64     000A                     PCLATH          equ	10	;# 
    65     000B                     INTCON          equ	11	;# 
    66     000C                     PIR1            equ	12	;# 
    67     000D                     PIR2            equ	13	;# 
    68     000E                     TMR1            equ	14	;# 
    69     000E                     TMR1L           equ	14	;# 
    70     000F                     TMR1H           equ	15	;# 
    71     0010                     T1CON           equ	16	;# 
    72     0011                     TMR2            equ	17	;# 
    73     0012                     T2CON           equ	18	;# 
    74     0013                     SSPBUF          equ	19	;# 
    75     0014                     SSPCON          equ	20	;# 
    76     0015                     CCPR            equ	21	;# 
    77     0015                     CCPR1L          equ	21	;# 
    78     0016                     CCPR1H          equ	22	;# 
    79     0017                     CCP1CON         equ	23	;# 
    80     0018                     RCSTA           equ	24	;# 
    81     0019                     TXREG           equ	25	;# 
    82     001A                     RCREG           equ	26	;# 
    83     001C                     PWM1CON         equ	28	;# 
    84     001D                     ECCPAS          equ	29	;# 
    85     001E                     ADRESH          equ	30	;# 
    86     001F                     ADCON0          equ	31	;# 
    87     0081                     OPTION_REG      equ	129	;# 
    88     0085                     TRISA           equ	133	;# 
    89     0086                     TRISB           equ	134	;# 
    90     0087                     TRISC           equ	135	;# 
    91     008C                     PIE1            equ	140	;# 
    92     008D                     PIE2            equ	141	;# 
    93     008E                     PCON            equ	142	;# 
    94     008F                     OSCCON          equ	143	;# 
    95     0090                     OSCTUNE         equ	144	;# 
    96     0092                     PR2             equ	146	;# 
    97     0093                     SSPADD          equ	147	;# 
    98     0093                     SSPMSK          equ	147	;# 
    99     0093                     MSK             equ	147	;# 
   100     0094                     SSPSTAT         equ	148	;# 
   101     0095                     WPUA            equ	149	;# 
   102     0095                     WPU             equ	149	;# 
   103     0096                     IOCA            equ	150	;# 
   104     0096                     IOC             equ	150	;# 
   105     0097                     WDTCON          equ	151	;# 
   106     0098                     TXSTA           equ	152	;# 
   107     0099                     SPBRG           equ	153	;# 
   108     009A                     SPBRGH          equ	154	;# 
   109     009B                     BAUDCTL         equ	155	;# 
   110     009E                     ADRESL          equ	158	;# 
   111     009F                     ADCON1          equ	159	;# 
   112     010C                     EEDAT           equ	268	;# 
   113     010C                     EEDATA          equ	268	;# 
   114     010D                     EEADR           equ	269	;# 
   115     010E                     EEDATH          equ	270	;# 
   116     010F                     EEADRH          equ	271	;# 
   117     0115                     WPUB            equ	277	;# 
   118     0116                     IOCB            equ	278	;# 
   119     0118                     VRCON           equ	280	;# 
   120     0119                     CM1CON0         equ	281	;# 
   121     011A                     CM2CON0         equ	282	;# 
   122     011B                     CM2CON1         equ	283	;# 
   123     011E                     ANSEL           equ	286	;# 
   124     011F                     ANSELH          equ	287	;# 
   125     018C                     EECON1          equ	396	;# 
   126     018D                     EECON2          equ	397	;# 
   127     019D                     PSTRCON         equ	413	;# 
   128     019E                     SRCON           equ	414	;# 
   129     0000                     INDF            equ	0	;# 
   130     0001                     TMR0            equ	1	;# 
   131     0002                     PCL             equ	2	;# 
   132     0003                     STATUS          equ	3	;# 
   133     0004                     FSR             equ	4	;# 
   134     0005                     PORTA           equ	5	;# 
   135     0006                     PORTB           equ	6	;# 
   136     0007                     PORTC           equ	7	;# 
   137     000A                     PCLATH          equ	10	;# 
   138     000B                     INTCON          equ	11	;# 
   139     000C                     PIR1            equ	12	;# 
   140     000D                     PIR2            equ	13	;# 
   141     000E                     TMR1            equ	14	;# 
   142     000E                     TMR1L           equ	14	;# 
   143     000F                     TMR1H           equ	15	;# 
   144     0010                     T1CON           equ	16	;# 
   145     0011                     TMR2            equ	17	;# 
   146     0012                     T2CON           equ	18	;# 
   147     0013                     SSPBUF          equ	19	;# 
   148     0014                     SSPCON          equ	20	;# 
   149     0015                     CCPR            equ	21	;# 
   150     0015                     CCPR1L          equ	21	;# 
   151     0016                     CCPR1H          equ	22	;# 
   152     0017                     CCP1CON         equ	23	;# 
   153     0018                     RCSTA           equ	24	;# 
   154     0019                     TXREG           equ	25	;# 
   155     001A                     RCREG           equ	26	;# 
   156     001C                     PWM1CON         equ	28	;# 
   157     001D                     ECCPAS          equ	29	;# 
   158     001E                     ADRESH          equ	30	;# 
   159     001F                     ADCON0          equ	31	;# 
   160     0081                     OPTION_REG      equ	129	;# 
   161     0085                     TRISA           equ	133	;# 
   162     0086                     TRISB           equ	134	;# 
   163     0087                     TRISC           equ	135	;# 
   164     008C                     PIE1            equ	140	;# 
   165     008D                     PIE2            equ	141	;# 
   166     008E                     PCON            equ	142	;# 
   167     008F                     OSCCON          equ	143	;# 
   168     0090                     OSCTUNE         equ	144	;# 
   169     0092                     PR2             equ	146	;# 
   170     0093                     SSPADD          equ	147	;# 
   171     0093                     SSPMSK          equ	147	;# 
   172     0093                     MSK             equ	147	;# 
   173     0094                     SSPSTAT         equ	148	;# 
   174     0095                     WPUA            equ	149	;# 
   175     0095                     WPU             equ	149	;# 
   176     0096                     IOCA            equ	150	;# 
   177     0096                     IOC             equ	150	;# 
   178     0097                     WDTCON          equ	151	;# 
   179     0098                     TXSTA           equ	152	;# 
   180     0099                     SPBRG           equ	153	;# 
   181     009A                     SPBRGH          equ	154	;# 
   182     009B                     BAUDCTL         equ	155	;# 
   183     009E                     ADRESL          equ	158	;# 
   184     009F                     ADCON1          equ	159	;# 
   185     010C                     EEDAT           equ	268	;# 
   186     010C                     EEDATA          equ	268	;# 
   187     010D                     EEADR           equ	269	;# 
   188     010E                     EEDATH          equ	270	;# 
   189     010F                     EEADRH          equ	271	;# 
   190     0115                     WPUB            equ	277	;# 
   191     0116                     IOCB            equ	278	;# 
   192     0118                     VRCON           equ	280	;# 
   193     0119                     CM1CON0         equ	281	;# 
   194     011A                     CM2CON0         equ	282	;# 
   195     011B                     CM2CON1         equ	283	;# 
   196     011E                     ANSEL           equ	286	;# 
   197     011F                     ANSELH          equ	287	;# 
   198     018C                     EECON1          equ	396	;# 
   199     018D                     EECON2          equ	397	;# 
   200     019D                     PSTRCON         equ	413	;# 
   201     019E                     SRCON           equ	414	;# 
   202     0007                     _PORTC          set	7
   203     0006                     _PORTB          set	6
   204     0005                     _PORTA          set	5
   205     000B                     _INTCON         set	11
   206     0081                     _OPTION_REG     set	129
   207     0087                     _TRISC          set	135
   208     0086                     _TRISB          set	134
   209     0085                     _TRISA          set	133
   210     0115                     _WPUB           set	277
   211     011F                     _ANSELH         set	287
   212     011E                     _ANSEL          set	286
   213                           
   214                           	psect	cinit
   215     07FA                     start_initialization:	
   216                           ; #config settings
   217                           
   218     07FA                     __initialization:
   219                           
   220                           ; Clear objects allocated to COMMON
   221     07FA  01F0               	clrf	__pbssCOMMON& (0+127)
   222     07FB  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   223     07FC  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   224     07FD                     end_of_initialization:	
   225                           ;End of C runtime variable initialization code
   226                           
   227     07FD                     __end_of__initialization:
   228     07FD  0183               	clrf	3
   229     07FE  118A  2FA4         	ljmp	_main	;jump to C main() function
   230                           
   231                           	psect	bssCOMMON
   232     0070                     __pbssCOMMON:
   233     0070                     _raw_input:
   234     0070                     	ds	1
   235     0071                     _negative_out:
   236     0071                     	ds	1
   237     0072                     _positive_out:
   238     0072                     	ds	1
   239                           
   240                           	psect	cstackCOMMON
   241     0073                     __pcstackCOMMON:
   242     0073                     ?_system_init:
   243     0073                     ?_init_timer0:	
   244                           ; 1 bytes @ 0x0
   245                           
   246     0073                     ?_process_io:	
   247                           ; 1 bytes @ 0x0
   248                           
   249     0073                     ?_main:	
   250                           ; 1 bytes @ 0x0
   251                           
   252     0073                     ??_system_init:	
   253                           ; 1 bytes @ 0x0
   254                           
   255     0073                     ??_init_timer0:	
   256                           ; 1 bytes @ 0x0
   257                           
   258     0073                     ??_process_io:	
   259                           ; 1 bytes @ 0x0
   260                           
   261                           
   262                           ; 1 bytes @ 0x0
   263     0073                     	ds	1
   264     0074                     ??_main:
   265                           
   266                           	psect	maintext
   267     07A4                     __pmaintext:	
   268                           ; 1 bytes @ 0x1
   269 ;;
   270 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   271 ;;
   272 ;; *************** function _main *****************
   273 ;; Defined at:
   274 ;;		line 30 in file "main.c"
   275 ;; Parameters:    Size  Location     Type
   276 ;;		None
   277 ;; Auto vars:     Size  Location     Type
   278 ;;		None
   279 ;; Return value:  Size  Location     Type
   280 ;;                  1    wreg      void 
   281 ;; Registers used:
   282 ;;		wreg, status,2, status,0, pclath, cstack
   283 ;; Tracked objects:
   284 ;;		On entry : B00/0
   285 ;;		On exit  : 0/0
   286 ;;		Unchanged: 0/0
   287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   288 ;;      Params:         0       0       0       0
   289 ;;      Locals:         0       0       0       0
   290 ;;      Temps:          0       0       0       0
   291 ;;      Totals:         0       0       0       0
   292 ;;Total ram usage:        0 bytes
   293 ;; Hardware stack levels required when called: 1
   294 ;; This function calls:
   295 ;;		_init_timer0
   296 ;;		_process_io
   297 ;;		_system_init
   298 ;; This function is called by:
   299 ;;		Startup code after reset
   300 ;; This function uses a non-reentrant model
   301 ;;
   302                           
   303     07A4                     _main:	
   304                           ;psect for function _main
   305                           
   306     07A4                     l626:	
   307                           ;incstack = 0
   308                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   309                           
   310                           
   311                           ;main.c: 32:     PORTA = 0;
   312     07A4  118A  27B6  118A   	fcall	_system_init
   313                           
   314                           ;main.c: 34: 
   315     07A7  118A  2797  118A   	fcall	_init_timer0
   316     07AA                     l40:
   317     07AA  1D0B               	btfss	11,2	;volatile
   318     07AB  2FAD               	goto	u31
   319     07AC  2FAE               	goto	u30
   320     07AD                     u31:
   321     07AD  2FAA               	goto	l40
   322     07AE                     u30:
   323     07AE                     l628:
   324                           
   325                           ;main.c: 40:     PORTC = 0;
   326     07AE  118A  27D7  118A   	fcall	_process_io
   327     07B1                     l630:
   328                           
   329                           ;main.c: 43: 
   330     07B1  30FB               	movlw	251
   331     07B2  058B               	andwf	11,f	;volatile
   332     07B3  2FAA               	goto	l40
   333     07B4  118A  2800         	ljmp	start
   334     07B6                     __end_of_main:
   335                           
   336                           	psect	text1
   337     07B6                     __ptext1:	
   338 ;; *************** function _system_init *****************
   339 ;; Defined at:
   340 ;;		line 47 in file "main.c"
   341 ;; Parameters:    Size  Location     Type
   342 ;;		None
   343 ;; Auto vars:     Size  Location     Type
   344 ;;		None
   345 ;; Return value:  Size  Location     Type
   346 ;;                  1    wreg      void 
   347 ;; Registers used:
   348 ;;		wreg, status,2, status,0
   349 ;; Tracked objects:
   350 ;;		On entry : 0/0
   351 ;;		On exit  : 0/0
   352 ;;		Unchanged: 0/0
   353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   354 ;;      Params:         0       0       0       0
   355 ;;      Locals:         0       0       0       0
   356 ;;      Temps:          0       0       0       0
   357 ;;      Totals:         0       0       0       0
   358 ;;Total ram usage:        0 bytes
   359 ;; Hardware stack levels used: 1
   360 ;; This function calls:
   361 ;;		Nothing
   362 ;; This function is called by:
   363 ;;		_main
   364 ;; This function uses a non-reentrant model
   365 ;;
   366                           
   367     07B6                     _system_init:	
   368                           ;psect for function _system_init
   369                           
   370     07B6                     l600:	
   371                           ;incstack = 0
   372                           ; Regs used in _system_init: [wreg+status,2+status,0]
   373                           
   374                           
   375                           ;main.c: 51: void init_timer0(void){
   376     07B6  1283               	bcf	3,5	;RP0=0, select bank2
   377     07B7  1703               	bsf	3,6	;RP1=1, select bank2
   378     07B8  019E               	clrf	30	;volatile
   379                           
   380                           ;main.c: 52: 
   381     07B9  019F               	clrf	31	;volatile
   382                           
   383                           ;main.c: 54: 
   384     07BA  1283               	bcf	3,5	;RP0=0, select bank0
   385     07BB  1303               	bcf	3,6	;RP1=0, select bank0
   386     07BC  0185               	clrf	5	;volatile
   387                           
   388                           ;main.c: 55:     OPTION_REG &= ~0x08;
   389     07BD  1683               	bsf	3,5	;RP0=1, select bank1
   390     07BE  1303               	bcf	3,6	;RP1=0, select bank1
   391     07BF  0185               	clrf	5	;volatile
   392                           
   393                           ;main.c: 57:     OPTION_REG |= 0x07;
   394     07C0  1283               	bcf	3,5	;RP0=0, select bank0
   395     07C1  1303               	bcf	3,6	;RP1=0, select bank0
   396     07C2  0186               	clrf	6	;volatile
   397     07C3                     l602:
   398                           
   399                           ;main.c: 58:     OPTION_REG &= ~0x01;
   400     07C3  30FF               	movlw	255
   401     07C4  1683               	bsf	3,5	;RP0=1, select bank1
   402     07C5  1303               	bcf	3,6	;RP1=0, select bank1
   403     07C6  0086               	movwf	6	;volatile
   404     07C7                     l604:
   405                           
   406                           ;main.c: 60: 
   407     07C7  30F0               	movlw	240
   408     07C8  1283               	bcf	3,5	;RP0=0, select bank2
   409     07C9  1703               	bsf	3,6	;RP1=1, select bank2
   410     07CA  0095               	movwf	21	;volatile
   411                           
   412                           ;main.c: 62: }
   413     07CB  1283               	bcf	3,5	;RP0=0, select bank0
   414     07CC  1303               	bcf	3,6	;RP1=0, select bank0
   415     07CD  0187               	clrf	7	;volatile
   416                           
   417                           ;main.c: 63: 
   418     07CE  1683               	bsf	3,5	;RP0=1, select bank1
   419     07CF  1303               	bcf	3,6	;RP1=0, select bank1
   420     07D0  0187               	clrf	7	;volatile
   421     07D1                     l606:
   422                           
   423                           ;main.c: 66:     int dummy;
   424     07D1  307F               	movlw	127
   425     07D2  0581               	andwf	1,f	;volatile
   426     07D3                     l608:
   427                           
   428                           ;main.c: 68: 
   429     07D3  01F0               	clrf	_raw_input
   430     07D4                     l610:
   431                           
   432                           ;main.c: 69:     raw_input = (PORTB & 0xf0);
   433     07D4  01F2               	clrf	_positive_out
   434     07D5                     l612:
   435                           
   436                           ;main.c: 70: 
   437     07D5  01F1               	clrf	_negative_out
   438     07D6                     l48:
   439     07D6  0008               	return
   440     07D7                     __end_of_system_init:
   441                           
   442                           	psect	text2
   443     07D7                     __ptext2:	
   444 ;; *************** function _process_io *****************
   445 ;; Defined at:
   446 ;;		line 86 in file "main.c"
   447 ;; Parameters:    Size  Location     Type
   448 ;;		None
   449 ;; Auto vars:     Size  Location     Type
   450 ;;  dummy           2    0        int 
   451 ;; Return value:  Size  Location     Type
   452 ;;                  1    wreg      void 
   453 ;; Registers used:
   454 ;;		wreg, status,2, status,0
   455 ;; Tracked objects:
   456 ;;		On entry : 0/0
   457 ;;		On exit  : 0/0
   458 ;;		Unchanged: 0/0
   459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   460 ;;      Params:         0       0       0       0
   461 ;;      Locals:         0       0       0       0
   462 ;;      Temps:          1       0       0       0
   463 ;;      Totals:         1       0       0       0
   464 ;;Total ram usage:        1 bytes
   465 ;; Hardware stack levels used: 1
   466 ;; This function calls:
   467 ;;		Nothing
   468 ;; This function is called by:
   469 ;;		_main
   470 ;; This function uses a non-reentrant model
   471 ;;
   472                           
   473     07D7                     _process_io:	
   474                           ;psect for function _process_io
   475                           
   476     07D7                     l616:	
   477                           ;incstack = 0
   478                           ; Regs used in _process_io: [wreg+status,2+status,0]
   479                           
   480     07D7  1283               	bcf	3,5	;RP0=0, select bank0
   481     07D8  1303               	bcf	3,6	;RP1=0, select bank0
   482     07D9  0806               	movf	6,w	;volatile
   483     07DA  00F0               	movwf	_raw_input
   484     07DB                     l618:
   485     07DB  30F0               	movlw	240
   486     07DC  05F0               	andwf	_raw_input,f
   487     07DD                     l620:
   488     07DD  0870               	movf	_raw_input,w
   489     07DE  00F2               	movwf	_positive_out
   490     07DF  0872               	movf	_positive_out,w
   491     07E0  00F3               	movwf	??_process_io
   492     07E1  3004               	movlw	4
   493     07E2                     u15:
   494     07E2  1003               	clrc
   495     07E3  0CF3               	rrf	??_process_io,f
   496     07E4  3EFF               	addlw	-1
   497     07E5  1D03               	skipz
   498     07E6  2FE2               	goto	u15
   499     07E7  0873               	movf	??_process_io,w
   500     07E8  3AFF               	xorlw	255
   501     07E9  00F1               	movwf	_negative_out
   502     07EA  300F               	movlw	15
   503     07EB  05F1               	andwf	_negative_out,f
   504     07EC  0872               	movf	_positive_out,w
   505     07ED  0471               	iorwf	_negative_out,w
   506     07EE  0087               	movwf	7	;volatile
   507     07EF  30F0               	movlw	240
   508     07F0  0672               	xorwf	_positive_out,w
   509     07F1  1D03               	btfss	3,2
   510     07F2  2FF4               	goto	u21
   511     07F3  2FF5               	goto	u20
   512     07F4                     u21:
   513     07F4  2FF7               	goto	l624
   514     07F5                     u20:
   515     07F5                     l622:
   516     07F5  1685               	bsf	5,5	;volatile
   517     07F6  2FF9               	goto	l56
   518     07F7                     l624:
   519     07F7  30DF               	movlw	223
   520     07F8  0585               	andwf	5,f	;volatile
   521     07F9                     l56:
   522     07F9  0008               	return
   523     07FA                     __end_of_process_io:
   524                           
   525                           	psect	text3
   526     0797                     __ptext3:	
   527 ;; *************** function _init_timer0 *****************
   528 ;; Defined at:
   529 ;;		line 73 in file "main.c"
   530 ;; Parameters:    Size  Location     Type
   531 ;;		None
   532 ;; Auto vars:     Size  Location     Type
   533 ;;		None
   534 ;; Return value:  Size  Location     Type
   535 ;;                  1    wreg      void 
   536 ;; Registers used:
   537 ;;		wreg, status,2, status,0
   538 ;; Tracked objects:
   539 ;;		On entry : 0/0
   540 ;;		On exit  : 0/0
   541 ;;		Unchanged: 0/0
   542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   543 ;;      Params:         0       0       0       0
   544 ;;      Locals:         0       0       0       0
   545 ;;      Temps:          0       0       0       0
   546 ;;      Totals:         0       0       0       0
   547 ;;Total ram usage:        0 bytes
   548 ;; Hardware stack levels used: 1
   549 ;; This function calls:
   550 ;;		Nothing
   551 ;; This function is called by:
   552 ;;		_main
   553 ;; This function uses a non-reentrant model
   554 ;;
   555                           
   556     0797                     _init_timer0:	
   557                           ;psect for function _init_timer0
   558                           
   559     0797                     l614:	
   560                           ;incstack = 0
   561                           ; Regs used in _init_timer0: [wreg+status,2+status,0]
   562                           
   563                           
   564                           ;main.c: 75:     PORTC = (positive_out | negative_out);
   565     0797  30DF               	movlw	223
   566     0798  1683               	bsf	3,5	;RP0=1, select bank1
   567     0799  1303               	bcf	3,6	;RP1=0, select bank1
   568     079A  0581               	andwf	1,f	;volatile
   569                           
   570                           ;main.c: 77: 
   571     079B  30F7               	movlw	247
   572     079C  0581               	andwf	1,f	;volatile
   573                           
   574                           ;main.c: 79: 
   575     079D  3007               	movlw	7
   576     079E  0481               	iorwf	1,f	;volatile
   577                           
   578                           ;main.c: 80:         PORTA |= 0x20;
   579     079F  30FE               	movlw	254
   580     07A0  0581               	andwf	1,f	;volatile
   581                           
   582                           ;main.c: 83:         PORTA &= ~0x20;
   583     07A1  307F               	movlw	127
   584     07A2  0581               	andwf	1,f	;volatile
   585     07A3                     l51:
   586     07A3  0008               	return
   587     07A4                     __end_of_init_timer0:
   588     0001                     ___latbits      equ	1
   589     007E                     btemp           set	126	;btemp
   590     007E                     wtemp0          set	126
   591                           
   592                           	psect	config
   593                           
   594                           ;Config register CONFIG @ 0x2007
   595                           ;	Oscillator Selection bits
   596                           ;	FOSC = INTRCIO, INTOSCIO oscillator: I/O function on RA4/OSC2/CLKOUT pin, I/O function
      +                           on RA5/OSC1/CLKIN
   597                           ;	Watchdog Timer Enable bit
   598                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   599                           ;	Power-up Timer Enable bit
   600                           ;	PWRTE = OFF, PWRT disabled
   601                           ;	MCLR Pin Function Select bit
   602                           ;	MCLRE = OFF, MCLR pin function is digital input, MCLR internally tied to VDD
   603                           ;	Code Protection bit
   604                           ;	CP = OFF, Program memory code protection is disabled
   605                           ;	Data Code Protection bit
   606                           ;	CPD = OFF, Data memory code protection is disabled
   607                           ;	Brown-out Reset Selection bits
   608                           ;	BOREN = ON, BOR enabled
   609                           ;	Internal External Switchover bit
   610                           ;	IESO = ON, Internal External Switchover mode is enabled
   611                           ;	Fail-Safe Clock Monitor Enabled bit
   612                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   613     2007                     	org	8199
   614     2007  3FD4               	dw	16340

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      1       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_process_io

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _init_timer0
                         _process_io
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _process_io                                           3     3      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_timer0
   _process_io
   _system_init

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
COMMON              14      1       4     28.6%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       4      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Fri Oct 04 14:13:00 2024

                     l40 07AA                       l51 07A3                       l56 07F9  
                     l48 07D6                       u20 07F5                       u21 07F4  
                     u30 07AE                       u15 07E2                       u31 07AD  
    __end_of_system_init 07D7                      l600 07B6                      l610 07D4  
                    l602 07C3                      l620 07DD                      l612 07D5  
                    l604 07C7                      l614 0797                      l622 07F5  
                    l606 07D1                      l630 07B1                      l624 07F7  
                    l616 07D7                      l608 07D3                      l618 07DB  
                    l626 07A4                      l628 07AE                     _WPUB 0115  
                   _main 07A4                     btemp 007E                     start 0000  
                  ?_main 0073                    _ANSEL 011E                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087             ?_init_timer0 0073  
                  status 0003                    wtemp0 007E          __initialization 07FA  
            _system_init 07B6             __end_of_main 07B6                   ??_main 0074  
                 _ANSELH 011F                   _INTCON 000B  __end_of__initialization 07FD  
         __pcstackCOMMON 0073               __pmaintext 07A4             ?_system_init 0073  
                __ptext1 07B6                  __ptext2 07D7                  __ptext3 0797  
   end_of_initialization 07FD               _process_io 07D7      start_initialization 07FA  
           _negative_out 0071              ?_process_io 0073            ??_init_timer0 0073  
            __pbssCOMMON 0070                ___latbits 0001      __end_of_init_timer0 07A4  
              _raw_input 0070              _init_timer0 0797             ??_process_io 0073  
     __end_of_process_io 07FA            ??_system_init 0073               _OPTION_REG 0081  
           _positive_out 0072  
