

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Mon Sep 09 12:52:39 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F690
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     9                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Generated 12/10/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F690 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0004                     fsr             equ	4
    51     0004                     fsr0            equ	4
    52     0000                     indf            equ	0
    53     0000                     indf0           equ	0
    54     0002                     pc              equ	2
    55     0002                     pcl             equ	2
    56     000A                     pclath          equ	10
    57     0003                     status          equ	3
    58     0000                     INDF            equ	0	;# 
    59     0001                     TMR0            equ	1	;# 
    60     0002                     PCL             equ	2	;# 
    61     0003                     STATUS          equ	3	;# 
    62     0004                     FSR             equ	4	;# 
    63     0005                     PORTA           equ	5	;# 
    64     0006                     PORTB           equ	6	;# 
    65     0007                     PORTC           equ	7	;# 
    66     000A                     PCLATH          equ	10	;# 
    67     000B                     INTCON          equ	11	;# 
    68     000C                     PIR1            equ	12	;# 
    69     000D                     PIR2            equ	13	;# 
    70     000E                     TMR1            equ	14	;# 
    71     000E                     TMR1L           equ	14	;# 
    72     000F                     TMR1H           equ	15	;# 
    73     0010                     T1CON           equ	16	;# 
    74     0011                     TMR2            equ	17	;# 
    75     0012                     T2CON           equ	18	;# 
    76     0013                     SSPBUF          equ	19	;# 
    77     0014                     SSPCON          equ	20	;# 
    78     0015                     CCPR            equ	21	;# 
    79     0015                     CCPR1L          equ	21	;# 
    80     0016                     CCPR1H          equ	22	;# 
    81     0017                     CCP1CON         equ	23	;# 
    82     0018                     RCSTA           equ	24	;# 
    83     0019                     TXREG           equ	25	;# 
    84     001A                     RCREG           equ	26	;# 
    85     001C                     PWM1CON         equ	28	;# 
    86     001D                     ECCPAS          equ	29	;# 
    87     001E                     ADRESH          equ	30	;# 
    88     001F                     ADCON0          equ	31	;# 
    89     0081                     OPTION_REG      equ	129	;# 
    90     0085                     TRISA           equ	133	;# 
    91     0086                     TRISB           equ	134	;# 
    92     0087                     TRISC           equ	135	;# 
    93     008C                     PIE1            equ	140	;# 
    94     008D                     PIE2            equ	141	;# 
    95     008E                     PCON            equ	142	;# 
    96     008F                     OSCCON          equ	143	;# 
    97     0090                     OSCTUNE         equ	144	;# 
    98     0092                     PR2             equ	146	;# 
    99     0093                     SSPADD          equ	147	;# 
   100     0093                     SSPMSK          equ	147	;# 
   101     0093                     MSK             equ	147	;# 
   102     0094                     SSPSTAT         equ	148	;# 
   103     0095                     WPUA            equ	149	;# 
   104     0095                     WPU             equ	149	;# 
   105     0096                     IOCA            equ	150	;# 
   106     0096                     IOC             equ	150	;# 
   107     0097                     WDTCON          equ	151	;# 
   108     0098                     TXSTA           equ	152	;# 
   109     0099                     SPBRG           equ	153	;# 
   110     009A                     SPBRGH          equ	154	;# 
   111     009B                     BAUDCTL         equ	155	;# 
   112     009E                     ADRESL          equ	158	;# 
   113     009F                     ADCON1          equ	159	;# 
   114     010C                     EEDAT           equ	268	;# 
   115     010C                     EEDATA          equ	268	;# 
   116     010D                     EEADR           equ	269	;# 
   117     010E                     EEDATH          equ	270	;# 
   118     010F                     EEADRH          equ	271	;# 
   119     0115                     WPUB            equ	277	;# 
   120     0116                     IOCB            equ	278	;# 
   121     0118                     VRCON           equ	280	;# 
   122     0119                     CM1CON0         equ	281	;# 
   123     011A                     CM2CON0         equ	282	;# 
   124     011B                     CM2CON1         equ	283	;# 
   125     011E                     ANSEL           equ	286	;# 
   126     011F                     ANSELH          equ	287	;# 
   127     018C                     EECON1          equ	396	;# 
   128     018D                     EECON2          equ	397	;# 
   129     019D                     PSTRCON         equ	413	;# 
   130     019E                     SRCON           equ	414	;# 
   131     0000                     INDF            equ	0	;# 
   132     0001                     TMR0            equ	1	;# 
   133     0002                     PCL             equ	2	;# 
   134     0003                     STATUS          equ	3	;# 
   135     0004                     FSR             equ	4	;# 
   136     0005                     PORTA           equ	5	;# 
   137     0006                     PORTB           equ	6	;# 
   138     0007                     PORTC           equ	7	;# 
   139     000A                     PCLATH          equ	10	;# 
   140     000B                     INTCON          equ	11	;# 
   141     000C                     PIR1            equ	12	;# 
   142     000D                     PIR2            equ	13	;# 
   143     000E                     TMR1            equ	14	;# 
   144     000E                     TMR1L           equ	14	;# 
   145     000F                     TMR1H           equ	15	;# 
   146     0010                     T1CON           equ	16	;# 
   147     0011                     TMR2            equ	17	;# 
   148     0012                     T2CON           equ	18	;# 
   149     0013                     SSPBUF          equ	19	;# 
   150     0014                     SSPCON          equ	20	;# 
   151     0015                     CCPR            equ	21	;# 
   152     0015                     CCPR1L          equ	21	;# 
   153     0016                     CCPR1H          equ	22	;# 
   154     0017                     CCP1CON         equ	23	;# 
   155     0018                     RCSTA           equ	24	;# 
   156     0019                     TXREG           equ	25	;# 
   157     001A                     RCREG           equ	26	;# 
   158     001C                     PWM1CON         equ	28	;# 
   159     001D                     ECCPAS          equ	29	;# 
   160     001E                     ADRESH          equ	30	;# 
   161     001F                     ADCON0          equ	31	;# 
   162     0081                     OPTION_REG      equ	129	;# 
   163     0085                     TRISA           equ	133	;# 
   164     0086                     TRISB           equ	134	;# 
   165     0087                     TRISC           equ	135	;# 
   166     008C                     PIE1            equ	140	;# 
   167     008D                     PIE2            equ	141	;# 
   168     008E                     PCON            equ	142	;# 
   169     008F                     OSCCON          equ	143	;# 
   170     0090                     OSCTUNE         equ	144	;# 
   171     0092                     PR2             equ	146	;# 
   172     0093                     SSPADD          equ	147	;# 
   173     0093                     SSPMSK          equ	147	;# 
   174     0093                     MSK             equ	147	;# 
   175     0094                     SSPSTAT         equ	148	;# 
   176     0095                     WPUA            equ	149	;# 
   177     0095                     WPU             equ	149	;# 
   178     0096                     IOCA            equ	150	;# 
   179     0096                     IOC             equ	150	;# 
   180     0097                     WDTCON          equ	151	;# 
   181     0098                     TXSTA           equ	152	;# 
   182     0099                     SPBRG           equ	153	;# 
   183     009A                     SPBRGH          equ	154	;# 
   184     009B                     BAUDCTL         equ	155	;# 
   185     009E                     ADRESL          equ	158	;# 
   186     009F                     ADCON1          equ	159	;# 
   187     010C                     EEDAT           equ	268	;# 
   188     010C                     EEDATA          equ	268	;# 
   189     010D                     EEADR           equ	269	;# 
   190     010E                     EEDATH          equ	270	;# 
   191     010F                     EEADRH          equ	271	;# 
   192     0115                     WPUB            equ	277	;# 
   193     0116                     IOCB            equ	278	;# 
   194     0118                     VRCON           equ	280	;# 
   195     0119                     CM1CON0         equ	281	;# 
   196     011A                     CM2CON0         equ	282	;# 
   197     011B                     CM2CON1         equ	283	;# 
   198     011E                     ANSEL           equ	286	;# 
   199     011F                     ANSELH          equ	287	;# 
   200     018C                     EECON1          equ	396	;# 
   201     018D                     EECON2          equ	397	;# 
   202     019D                     PSTRCON         equ	413	;# 
   203     019E                     SRCON           equ	414	;# 
   204                           
   205                           	psect	nvCOMMON
   206     0074                     __pnvCOMMON:
   207     0074                     _raw_input:
   208     0074                     	ds	1
   209     0075                     _masked_input:
   210     0075                     	ds	1
   211     0005                     _PORTA          set	5
   212                           
   213                           	psect	cinit
   214     07F9                     start_initialization:	
   215                           ; #config settings
   216                           
   217     07F9                     __initialization:
   218                           
   219                           ; Clear objects allocated to COMMON
   220     07F9  01F0               	clrf	__pbssCOMMON& (0+127)
   221     07FA  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   222     07FB  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   223     07FC  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   224     07FD                     end_of_initialization:	
   225                           ;End of C runtime variable initialization code
   226                           
   227     07FD                     __end_of__initialization:
   228     07FD  0183               	clrf	3
   229     07FE  118A  2FEA         	ljmp	_main	;jump to C main() function
   230                           
   231                           	psect	bssCOMMON
   232     0070                     __pbssCOMMON:
   233     0070                     _master_tally:
   234     0070                     	ds	1
   235     0071                     _output_lines_neg:
   236     0071                     	ds	1
   237     0072                     _output_lines_pos:
   238     0072                     	ds	1
   239     0073                     _input_lines:
   240     0073                     	ds	1
   241                           
   242                           	psect	cstackCOMMON
   243     0000                     __pcstackCOMMON:
   244     0000                     ?_system_init:
   245     0000                     ?_pins_init:	
   246                           ; 1 bytes @ 0x0
   247                           
   248     0000                     ?_read_input_pins:	
   249                           ; 1 bytes @ 0x0
   250                           
   251     0000                     ?_process_io:	
   252                           ; 1 bytes @ 0x0
   253                           
   254     0000                     ?_main:	
   255                           ; 1 bytes @ 0x0
   256                           
   257     0000                     ??_system_init:	
   258                           ; 1 bytes @ 0x0
   259                           
   260     0000                     ??_pins_init:	
   261                           ; 1 bytes @ 0x0
   262                           
   263     0000                     ??_read_input_pins:	
   264                           ; 1 bytes @ 0x0
   265                           
   266     0000                     ??_process_io:	
   267                           ; 1 bytes @ 0x0
   268                           
   269     0000                     ??_main:	
   270                           ; 1 bytes @ 0x0
   271                           
   272                           
   273                           	psect	maintext
   274     07EA                     __pmaintext:	
   275                           ; 1 bytes @ 0x0
   276 ;;
   277 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   278 ;;
   279 ;; *************** function _main *****************
   280 ;; Defined at:
   281 ;;		line 34 in file "main.c"
   282 ;; Parameters:    Size  Location     Type
   283 ;;		None
   284 ;; Auto vars:     Size  Location     Type
   285 ;;		None
   286 ;; Return value:  Size  Location     Type
   287 ;;                  1    wreg      void 
   288 ;; Registers used:
   289 ;;		wreg, status,2, status,0, pclath, cstack
   290 ;; Tracked objects:
   291 ;;		On entry : B00/0
   292 ;;		On exit  : 0/0
   293 ;;		Unchanged: 0/0
   294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   295 ;;      Params:         0       0       0       0
   296 ;;      Locals:         0       0       0       0
   297 ;;      Temps:          0       0       0       0
   298 ;;      Totals:         0       0       0       0
   299 ;;Total ram usage:        0 bytes
   300 ;; Hardware stack levels required when called: 1
   301 ;; This function calls:
   302 ;;		_pins_init
   303 ;;		_process_io
   304 ;;		_read_input_pins
   305 ;;		_system_init
   306 ;; This function is called by:
   307 ;;		Startup code after reset
   308 ;; This function uses a non-reentrant model
   309 ;;
   310                           
   311     07EA                     _main:	
   312                           ;psect for function _main
   313                           
   314     07EA                     l599:	
   315                           ;incstack = 0
   316                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   317                           
   318                           
   319                           ;main.c: 36: 
   320     07EA  118A  27D4  118A   	fcall	_system_init
   321                           
   322                           ;main.c: 38: 
   323     07ED  118A  27D3  118A   	fcall	_pins_init
   324     07F0                     l601:
   325                           
   326                           ;main.c: 42: }
   327     07F0  118A  27D5  118A   	fcall	_read_input_pins
   328     07F3                     l603:
   329                           
   330                           ;main.c: 44: void process_io(void) {
   331     07F3  118A  27DE  118A   	fcall	_process_io
   332     07F6  2FF0               	goto	l601
   333     07F7  118A  2800         	ljmp	start
   334     07F9                     __end_of_main:
   335                           
   336                           	psect	text1
   337     07D4                     __ptext1:	
   338 ;; *************** function _system_init *****************
   339 ;; Defined at:
   340 ;;		line 52 in file "main.c"
   341 ;; Parameters:    Size  Location     Type
   342 ;;		None
   343 ;; Auto vars:     Size  Location     Type
   344 ;;		None
   345 ;; Return value:  Size  Location     Type
   346 ;;                  1    wreg      void 
   347 ;; Registers used:
   348 ;;		None
   349 ;; Tracked objects:
   350 ;;		On entry : 0/0
   351 ;;		On exit  : 0/0
   352 ;;		Unchanged: 0/0
   353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   354 ;;      Params:         0       0       0       0
   355 ;;      Locals:         0       0       0       0
   356 ;;      Temps:          0       0       0       0
   357 ;;      Totals:         0       0       0       0
   358 ;;Total ram usage:        0 bytes
   359 ;; Hardware stack levels used: 1
   360 ;; This function calls:
   361 ;;		Nothing
   362 ;; This function is called by:
   363 ;;		_main
   364 ;; This function uses a non-reentrant model
   365 ;;
   366                           
   367     07D4                     _system_init:	
   368                           ;psect for function _system_init
   369                           
   370     07D4                     l33:	
   371                           ;incstack = 0
   372                           ; Regs used in _system_init: []
   373                           
   374     07D4  0008               	return
   375     07D5                     __end_of_system_init:
   376                           
   377                           	psect	text2
   378     07D5                     __ptext2:	
   379 ;; *************** function _read_input_pins *****************
   380 ;; Defined at:
   381 ;;		line 61 in file "main.c"
   382 ;; Parameters:    Size  Location     Type
   383 ;;		None
   384 ;; Auto vars:     Size  Location     Type
   385 ;;		None
   386 ;; Return value:  Size  Location     Type
   387 ;;                  1    wreg      void 
   388 ;; Registers used:
   389 ;;		wreg, status,2, status,0
   390 ;; Tracked objects:
   391 ;;		On entry : 0/0
   392 ;;		On exit  : 0/0
   393 ;;		Unchanged: 0/0
   394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   395 ;;      Params:         0       0       0       0
   396 ;;      Locals:         0       0       0       0
   397 ;;      Temps:          0       0       0       0
   398 ;;      Totals:         0       0       0       0
   399 ;;Total ram usage:        0 bytes
   400 ;; Hardware stack levels used: 1
   401 ;; This function calls:
   402 ;;		Nothing
   403 ;; This function is called by:
   404 ;;		_main
   405 ;; This function uses a non-reentrant model
   406 ;;
   407                           
   408     07D5                     _read_input_pins:	
   409                           ;psect for function _read_input_pins
   410                           
   411     07D5                     l587:	
   412                           ;incstack = 0
   413                           ; Regs used in _read_input_pins: [wreg+status,2+status,0]
   414                           
   415     07D5  1283               	bcf	3,5	;RP0=0, select bank0
   416     07D6  1303               	bcf	3,6	;RP1=0, select bank0
   417     07D7  0805               	movf	5,w	;volatile
   418     07D8  00F4               	movwf	_raw_input
   419     07D9  0874               	movf	_raw_input,w
   420     07DA  00F5               	movwf	_masked_input
   421     07DB                     l589:
   422     07DB  300F               	movlw	15
   423     07DC  05F5               	andwf	_masked_input,f
   424     07DD                     l39:
   425     07DD  0008               	return
   426     07DE                     __end_of_read_input_pins:
   427                           
   428                           	psect	text3
   429     07DE                     __ptext3:	
   430 ;; *************** function _process_io *****************
   431 ;; Defined at:
   432 ;;		line 66 in file "main.c"
   433 ;; Parameters:    Size  Location     Type
   434 ;;		None
   435 ;; Auto vars:     Size  Location     Type
   436 ;;		None
   437 ;; Return value:  Size  Location     Type
   438 ;;                  1    wreg      void 
   439 ;; Registers used:
   440 ;;		wreg, status,2, status,0
   441 ;; Tracked objects:
   442 ;;		On entry : 0/0
   443 ;;		On exit  : 0/0
   444 ;;		Unchanged: 0/0
   445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   446 ;;      Params:         0       0       0       0
   447 ;;      Locals:         0       0       0       0
   448 ;;      Temps:          0       0       0       0
   449 ;;      Totals:         0       0       0       0
   450 ;;Total ram usage:        0 bytes
   451 ;; Hardware stack levels used: 1
   452 ;; This function calls:
   453 ;;		Nothing
   454 ;; This function is called by:
   455 ;;		_main
   456 ;; This function uses a non-reentrant model
   457 ;;
   458                           
   459     07DE                     _process_io:	
   460                           ;psect for function _process_io
   461                           
   462     07DE                     l591:	
   463                           ;incstack = 0
   464                           ; Regs used in _process_io: [wreg+status,2+status,0]
   465                           
   466     07DE  0874               	movf	_raw_input,w
   467     07DF  00F5               	movwf	_masked_input
   468     07E0                     l593:
   469     07E0  300F               	movlw	15
   470     07E1  05F5               	andwf	_masked_input,f
   471     07E2                     l595:
   472     07E2  0875               	movf	_masked_input,w
   473     07E3  1903               	btfsc	3,2
   474     07E4  2FE6               	goto	u11
   475     07E5  2FE7               	goto	u10
   476     07E6                     u11:
   477     07E6  2FE9               	goto	l43
   478     07E7                     u10:
   479     07E7                     l597:
   480     07E7  3001               	movlw	1
   481     07E8  00F0               	movwf	_master_tally
   482     07E9                     l43:
   483     07E9  0008               	return
   484     07EA                     __end_of_process_io:
   485                           
   486                           	psect	text4
   487     07D3                     __ptext4:	
   488 ;; *************** function _pins_init *****************
   489 ;; Defined at:
   490 ;;		line 57 in file "main.c"
   491 ;; Parameters:    Size  Location     Type
   492 ;;		None
   493 ;; Auto vars:     Size  Location     Type
   494 ;;		None
   495 ;; Return value:  Size  Location     Type
   496 ;;                  1    wreg      void 
   497 ;; Registers used:
   498 ;;		None
   499 ;; Tracked objects:
   500 ;;		On entry : 0/0
   501 ;;		On exit  : 0/0
   502 ;;		Unchanged: 0/0
   503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   504 ;;      Params:         0       0       0       0
   505 ;;      Locals:         0       0       0       0
   506 ;;      Temps:          0       0       0       0
   507 ;;      Totals:         0       0       0       0
   508 ;;Total ram usage:        0 bytes
   509 ;; Hardware stack levels used: 1
   510 ;; This function calls:
   511 ;;		Nothing
   512 ;; This function is called by:
   513 ;;		_main
   514 ;; This function uses a non-reentrant model
   515 ;;
   516                           
   517     07D3                     _pins_init:	
   518                           ;psect for function _pins_init
   519                           
   520     07D3                     l36:	
   521                           ;incstack = 0
   522                           ; Regs used in _pins_init: []
   523                           
   524     07D3  0008               	return
   525     07D4                     __end_of_pins_init:
   526     0001                     ___latbits      equ	1
   527     007E                     btemp           set	126	;btemp
   528     007E                     wtemp0          set	126
   529                           
   530                           	psect	config
   531                           
   532                           ;Config register CONFIG @ 0x2007
   533                           ;	Oscillator Selection bits
   534                           ;	FOSC = EXTRCIO, RCIO oscillator: I/O function on RA4/OSC2/CLKOUT pin, RC on RA5/OSC1/C
      +                          LKIN
   535                           ;	Watchdog Timer Enable bit
   536                           ;	WDTE = ON, WDT enabled
   537                           ;	Power-up Timer Enable bit
   538                           ;	PWRTE = OFF, PWRT disabled
   539                           ;	MCLR Pin Function Select bit
   540                           ;	MCLRE = ON, MCLR pin function is MCLR
   541                           ;	Code Protection bit
   542                           ;	CP = OFF, Program memory code protection is disabled
   543                           ;	Data Code Protection bit
   544                           ;	CPD = OFF, Data memory code protection is disabled
   545                           ;	Brown-out Reset Selection bits
   546                           ;	BOREN = ON, BOR enabled
   547                           ;	Internal External Switchover bit
   548                           ;	IESO = ON, Internal External Switchover mode is enabled
   549                           ;	Fail-Safe Clock Monitor Enabled bit
   550                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   551     2007                     	org	8199
   552     2007  3FFE               	dw	16382

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      0       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                          _pins_init
                         _process_io
                    _read_input_pins
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_input_pins                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _process_io                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pins_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _pins_init
   _process_io
   _read_input_pins
   _system_init

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
COMMON              14      0       6     42.9%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       6      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Mon Sep 09 12:52:39 2024

                     l33 07D4                       l43 07E9                       l36 07D3  
                     l39 07DD                       u10 07E7                       u11 07E6  
    __end_of_system_init 07D5                      l601 07F0                      l603 07F3  
                    l591 07DE                      l593 07E0                      l595 07E2  
                    l587 07D5                      l597 07E7                      l589 07DB  
                    l599 07EA                     _main 07EA                     btemp 007E  
                   start 0000                    ?_main 0000                    _PORTA 0005  
                  status 0003                    wtemp0 007E          __initialization 07F9  
            _system_init 07D4             __end_of_main 07F9                   ??_main 0000  
      ??_read_input_pins 0000  __end_of__initialization 07FD           __pcstackCOMMON 0000  
             __pnvCOMMON 0074               __pmaintext 07EA             ?_system_init 0000  
        _read_input_pins 07D5                  __ptext1 07D4                  __ptext2 07D5  
                __ptext3 07DE                  __ptext4 07D3     end_of_initialization 07FD  
      __end_of_pins_init 07D4               _process_io 07DE  __end_of_read_input_pins 07DE  
    start_initialization 07F9             _masked_input 0075              ?_process_io 0000  
            __pbssCOMMON 0070                ___latbits 0001         ?_read_input_pins 0000  
       _output_lines_neg 0071         _output_lines_pos 0072             _master_tally 0070  
              _raw_input 0074                _pins_init 07D3               ?_pins_init 0000  
            _input_lines 0073             ??_process_io 0000              ??_pins_init 0000  
     __end_of_process_io 07EA            ??_system_init 0000  
