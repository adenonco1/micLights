

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Sep 12 12:01:55 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F690
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     8                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 12/10/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F690 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0004                     fsr             equ	4
    48     0004                     fsr0            equ	4
    49     0000                     indf            equ	0
    50     0000                     indf0           equ	0
    51     0002                     pc              equ	2
    52     0002                     pcl             equ	2
    53     000A                     pclath          equ	10
    54     0003                     status          equ	3
    55     0000                     INDF            equ	0	;# 
    56     0001                     TMR0            equ	1	;# 
    57     0002                     PCL             equ	2	;# 
    58     0003                     STATUS          equ	3	;# 
    59     0004                     FSR             equ	4	;# 
    60     0005                     PORTA           equ	5	;# 
    61     0006                     PORTB           equ	6	;# 
    62     0007                     PORTC           equ	7	;# 
    63     000A                     PCLATH          equ	10	;# 
    64     000B                     INTCON          equ	11	;# 
    65     000C                     PIR1            equ	12	;# 
    66     000D                     PIR2            equ	13	;# 
    67     000E                     TMR1            equ	14	;# 
    68     000E                     TMR1L           equ	14	;# 
    69     000F                     TMR1H           equ	15	;# 
    70     0010                     T1CON           equ	16	;# 
    71     0011                     TMR2            equ	17	;# 
    72     0012                     T2CON           equ	18	;# 
    73     0013                     SSPBUF          equ	19	;# 
    74     0014                     SSPCON          equ	20	;# 
    75     0015                     CCPR            equ	21	;# 
    76     0015                     CCPR1L          equ	21	;# 
    77     0016                     CCPR1H          equ	22	;# 
    78     0017                     CCP1CON         equ	23	;# 
    79     0018                     RCSTA           equ	24	;# 
    80     0019                     TXREG           equ	25	;# 
    81     001A                     RCREG           equ	26	;# 
    82     001C                     PWM1CON         equ	28	;# 
    83     001D                     ECCPAS          equ	29	;# 
    84     001E                     ADRESH          equ	30	;# 
    85     001F                     ADCON0          equ	31	;# 
    86     0081                     OPTION_REG      equ	129	;# 
    87     0085                     TRISA           equ	133	;# 
    88     0086                     TRISB           equ	134	;# 
    89     0087                     TRISC           equ	135	;# 
    90     008C                     PIE1            equ	140	;# 
    91     008D                     PIE2            equ	141	;# 
    92     008E                     PCON            equ	142	;# 
    93     008F                     OSCCON          equ	143	;# 
    94     0090                     OSCTUNE         equ	144	;# 
    95     0092                     PR2             equ	146	;# 
    96     0093                     SSPADD          equ	147	;# 
    97     0093                     SSPMSK          equ	147	;# 
    98     0093                     MSK             equ	147	;# 
    99     0094                     SSPSTAT         equ	148	;# 
   100     0095                     WPUA            equ	149	;# 
   101     0095                     WPU             equ	149	;# 
   102     0096                     IOCA            equ	150	;# 
   103     0096                     IOC             equ	150	;# 
   104     0097                     WDTCON          equ	151	;# 
   105     0098                     TXSTA           equ	152	;# 
   106     0099                     SPBRG           equ	153	;# 
   107     009A                     SPBRGH          equ	154	;# 
   108     009B                     BAUDCTL         equ	155	;# 
   109     009E                     ADRESL          equ	158	;# 
   110     009F                     ADCON1          equ	159	;# 
   111     010C                     EEDAT           equ	268	;# 
   112     010C                     EEDATA          equ	268	;# 
   113     010D                     EEADR           equ	269	;# 
   114     010E                     EEDATH          equ	270	;# 
   115     010F                     EEADRH          equ	271	;# 
   116     0115                     WPUB            equ	277	;# 
   117     0116                     IOCB            equ	278	;# 
   118     0118                     VRCON           equ	280	;# 
   119     0119                     CM1CON0         equ	281	;# 
   120     011A                     CM2CON0         equ	282	;# 
   121     011B                     CM2CON1         equ	283	;# 
   122     011E                     ANSEL           equ	286	;# 
   123     011F                     ANSELH          equ	287	;# 
   124     018C                     EECON1          equ	396	;# 
   125     018D                     EECON2          equ	397	;# 
   126     019D                     PSTRCON         equ	413	;# 
   127     019E                     SRCON           equ	414	;# 
   128     0000                     INDF            equ	0	;# 
   129     0001                     TMR0            equ	1	;# 
   130     0002                     PCL             equ	2	;# 
   131     0003                     STATUS          equ	3	;# 
   132     0004                     FSR             equ	4	;# 
   133     0005                     PORTA           equ	5	;# 
   134     0006                     PORTB           equ	6	;# 
   135     0007                     PORTC           equ	7	;# 
   136     000A                     PCLATH          equ	10	;# 
   137     000B                     INTCON          equ	11	;# 
   138     000C                     PIR1            equ	12	;# 
   139     000D                     PIR2            equ	13	;# 
   140     000E                     TMR1            equ	14	;# 
   141     000E                     TMR1L           equ	14	;# 
   142     000F                     TMR1H           equ	15	;# 
   143     0010                     T1CON           equ	16	;# 
   144     0011                     TMR2            equ	17	;# 
   145     0012                     T2CON           equ	18	;# 
   146     0013                     SSPBUF          equ	19	;# 
   147     0014                     SSPCON          equ	20	;# 
   148     0015                     CCPR            equ	21	;# 
   149     0015                     CCPR1L          equ	21	;# 
   150     0016                     CCPR1H          equ	22	;# 
   151     0017                     CCP1CON         equ	23	;# 
   152     0018                     RCSTA           equ	24	;# 
   153     0019                     TXREG           equ	25	;# 
   154     001A                     RCREG           equ	26	;# 
   155     001C                     PWM1CON         equ	28	;# 
   156     001D                     ECCPAS          equ	29	;# 
   157     001E                     ADRESH          equ	30	;# 
   158     001F                     ADCON0          equ	31	;# 
   159     0081                     OPTION_REG      equ	129	;# 
   160     0085                     TRISA           equ	133	;# 
   161     0086                     TRISB           equ	134	;# 
   162     0087                     TRISC           equ	135	;# 
   163     008C                     PIE1            equ	140	;# 
   164     008D                     PIE2            equ	141	;# 
   165     008E                     PCON            equ	142	;# 
   166     008F                     OSCCON          equ	143	;# 
   167     0090                     OSCTUNE         equ	144	;# 
   168     0092                     PR2             equ	146	;# 
   169     0093                     SSPADD          equ	147	;# 
   170     0093                     SSPMSK          equ	147	;# 
   171     0093                     MSK             equ	147	;# 
   172     0094                     SSPSTAT         equ	148	;# 
   173     0095                     WPUA            equ	149	;# 
   174     0095                     WPU             equ	149	;# 
   175     0096                     IOCA            equ	150	;# 
   176     0096                     IOC             equ	150	;# 
   177     0097                     WDTCON          equ	151	;# 
   178     0098                     TXSTA           equ	152	;# 
   179     0099                     SPBRG           equ	153	;# 
   180     009A                     SPBRGH          equ	154	;# 
   181     009B                     BAUDCTL         equ	155	;# 
   182     009E                     ADRESL          equ	158	;# 
   183     009F                     ADCON1          equ	159	;# 
   184     010C                     EEDAT           equ	268	;# 
   185     010C                     EEDATA          equ	268	;# 
   186     010D                     EEADR           equ	269	;# 
   187     010E                     EEDATH          equ	270	;# 
   188     010F                     EEADRH          equ	271	;# 
   189     0115                     WPUB            equ	277	;# 
   190     0116                     IOCB            equ	278	;# 
   191     0118                     VRCON           equ	280	;# 
   192     0119                     CM1CON0         equ	281	;# 
   193     011A                     CM2CON0         equ	282	;# 
   194     011B                     CM2CON1         equ	283	;# 
   195     011E                     ANSEL           equ	286	;# 
   196     011F                     ANSELH          equ	287	;# 
   197     018C                     EECON1          equ	396	;# 
   198     018D                     EECON2          equ	397	;# 
   199     019D                     PSTRCON         equ	413	;# 
   200     019E                     SRCON           equ	414	;# 
   201                           
   202                           	psect	nvCOMMON
   203     0070                     __pnvCOMMON:
   204     0070                     _raw_input:
   205     0070                     	ds	1
   206     0071                     _negative_out:
   207     0071                     	ds	1
   208     0072                     _positive_out:
   209     0072                     	ds	1
   210     0007                     _PORTC          set	7
   211     0006                     _PORTB          set	6
   212     0005                     _PORTA          set	5
   213     0087                     _TRISC          set	135
   214     0086                     _TRISB          set	134
   215     0085                     _TRISA          set	133
   216     011E                     _ANSEL          set	286
   217                           
   218                           	psect	cinit
   219     07FD                     start_initialization:	
   220                           ; #config settings
   221                           
   222     07FD                     __initialization:
   223     07FD                     end_of_initialization:	
   224                           ;End of C runtime variable initialization code
   225                           
   226     07FD                     __end_of__initialization:
   227     07FD  0183               	clrf	3
   228     07FE  118A  2FB4         	ljmp	_main	;jump to C main() function
   229                           
   230                           	psect	cstackCOMMON
   231     0073                     __pcstackCOMMON:
   232     0073                     ?_system_init:
   233     0073                     ?_process_io:	
   234                           ; 1 bytes @ 0x0
   235                           
   236     0073                     ?_main:	
   237                           ; 1 bytes @ 0x0
   238                           
   239     0073                     ??_system_init:	
   240                           ; 1 bytes @ 0x0
   241                           
   242     0073                     ??_process_io:	
   243                           ; 1 bytes @ 0x0
   244                           
   245                           
   246                           ; 1 bytes @ 0x0
   247     0073                     	ds	1
   248     0074                     ??_main:
   249                           
   250                           	psect	maintext
   251     07B4                     __pmaintext:	
   252                           ; 1 bytes @ 0x1
   253 ;;
   254 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   255 ;;
   256 ;; *************** function _main *****************
   257 ;; Defined at:
   258 ;;		line 29 in file "main.c"
   259 ;; Parameters:    Size  Location     Type
   260 ;;		None
   261 ;; Auto vars:     Size  Location     Type
   262 ;;		None
   263 ;; Return value:  Size  Location     Type
   264 ;;                  1    wreg      void 
   265 ;; Registers used:
   266 ;;		wreg, status,2, status,0, pclath, cstack
   267 ;; Tracked objects:
   268 ;;		On entry : B00/0
   269 ;;		On exit  : 0/0
   270 ;;		Unchanged: 0/0
   271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   272 ;;      Params:         0       0       0       0
   273 ;;      Locals:         0       0       0       0
   274 ;;      Temps:          0       0       0       0
   275 ;;      Totals:         0       0       0       0
   276 ;;Total ram usage:        0 bytes
   277 ;; Hardware stack levels required when called: 1
   278 ;; This function calls:
   279 ;;		_process_io
   280 ;;		_system_init
   281 ;; This function is called by:
   282 ;;		Startup code after reset
   283 ;; This function uses a non-reentrant model
   284 ;;
   285                           
   286     07B4                     _main:	
   287                           ;psect for function _main
   288                           
   289     07B4                     l596:	
   290                           ;incstack = 0
   291                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   292                           
   293                           
   294                           ;main.c: 31:     raw_input = 0;
   295     07B4  118A  27BD  118A   	fcall	_system_init
   296     07B7                     l598:
   297                           
   298                           ;main.c: 35: 
   299     07B7  118A  27DA  118A   	fcall	_process_io
   300     07BA  2FB7               	goto	l598
   301     07BB  118A  2800         	ljmp	start
   302     07BD                     __end_of_main:
   303                           
   304                           	psect	text1
   305     07BD                     __ptext1:	
   306 ;; *************** function _system_init *****************
   307 ;; Defined at:
   308 ;;		line 40 in file "main.c"
   309 ;; Parameters:    Size  Location     Type
   310 ;;		None
   311 ;; Auto vars:     Size  Location     Type
   312 ;;		None
   313 ;; Return value:  Size  Location     Type
   314 ;;                  1    wreg      void 
   315 ;; Registers used:
   316 ;;		status,2
   317 ;; Tracked objects:
   318 ;;		On entry : 0/0
   319 ;;		On exit  : 0/0
   320 ;;		Unchanged: 0/0
   321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   322 ;;      Params:         0       0       0       0
   323 ;;      Locals:         0       0       0       0
   324 ;;      Temps:          0       0       0       0
   325 ;;      Totals:         0       0       0       0
   326 ;;Total ram usage:        0 bytes
   327 ;; Hardware stack levels used: 1
   328 ;; This function calls:
   329 ;;		Nothing
   330 ;; This function is called by:
   331 ;;		_main
   332 ;; This function uses a non-reentrant model
   333 ;;
   334                           
   335     07BD                     _system_init:	
   336                           ;psect for function _system_init
   337                           
   338     07BD                     l584:	
   339                           ;incstack = 0
   340                           ; Regs used in _system_init: [status,2]
   341                           
   342                           
   343                           ;main.c: 42:     negative_out = (~(positive_out >> 4)) & 0x0f;
   344     07BD  1283               	bcf	3,5	;RP0=0, select bank0
   345     07BE  1303               	bcf	3,6	;RP1=0, select bank0
   346     07BF  0185               	clrf	5	;volatile
   347                           
   348                           ;main.c: 43: 
   349     07C0  1283               	bcf	3,5	;RP0=0, select bank2
   350     07C1  1703               	bsf	3,6	;RP1=1, select bank2
   351     07C2  019E               	clrf	30	;volatile
   352                           
   353                           ;main.c: 44: 
   354     07C3  1683               	bsf	3,5	;RP0=1, select bank1
   355     07C4  1303               	bcf	3,6	;RP1=0, select bank1
   356     07C5  0185               	clrf	5	;volatile
   357                           
   358                           ;main.c: 46: 
   359     07C6  1283               	bcf	3,5	;RP0=0, select bank0
   360     07C7  1303               	bcf	3,6	;RP1=0, select bank0
   361     07C8  0186               	clrf	6	;volatile
   362     07C9                     l586:
   363                           
   364                           ;main.c: 47:     if(positive_out == 0xf0) {
   365     07C9  30F0               	movlw	240
   366     07CA  1683               	bsf	3,5	;RP0=1, select bank1
   367     07CB  1303               	bcf	3,6	;RP1=0, select bank1
   368     07CC  0086               	movwf	6	;volatile
   369                           
   370                           ;main.c: 49:         PORTA &= ~0x20;
   371     07CD  1283               	bcf	3,5	;RP0=0, select bank0
   372     07CE  1303               	bcf	3,6	;RP1=0, select bank0
   373     07CF  0187               	clrf	7	;volatile
   374                           
   375                           ;main.c: 50:     } else {
   376     07D0  1283               	bcf	3,5	;RP0=0, select bank2
   377     07D1  1703               	bsf	3,6	;RP1=1, select bank2
   378     07D2  019E               	clrf	30	;volatile
   379                           
   380                           ;main.c: 51: 
   381     07D3  1683               	bsf	3,5	;RP0=1, select bank1
   382     07D4  1303               	bcf	3,6	;RP1=0, select bank1
   383     07D5  0187               	clrf	7	;volatile
   384                           
   385                           ;main.c: 53:     }
   386     07D6  01F0               	clrf	_raw_input
   387                           
   388                           ;main.c: 54: }
   389     07D7  01F2               	clrf	_positive_out
   390     07D8  01F1               	clrf	_negative_out
   391     07D9                     l35:
   392     07D9  0008               	return
   393     07DA                     __end_of_system_init:
   394                           
   395                           	psect	text2
   396     07DA                     __ptext2:	
   397 ;; *************** function _process_io *****************
   398 ;; Defined at:
   399 ;;		line 58 in file "main.c"
   400 ;; Parameters:    Size  Location     Type
   401 ;;		None
   402 ;; Auto vars:     Size  Location     Type
   403 ;;		None
   404 ;; Return value:  Size  Location     Type
   405 ;;                  1    wreg      void 
   406 ;; Registers used:
   407 ;;		wreg, status,2, status,0
   408 ;; Tracked objects:
   409 ;;		On entry : 0/0
   410 ;;		On exit  : 0/0
   411 ;;		Unchanged: 0/0
   412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   413 ;;      Params:         0       0       0       0
   414 ;;      Locals:         0       0       0       0
   415 ;;      Temps:          1       0       0       0
   416 ;;      Totals:         1       0       0       0
   417 ;;Total ram usage:        1 bytes
   418 ;; Hardware stack levels used: 1
   419 ;; This function calls:
   420 ;;		Nothing
   421 ;; This function is called by:
   422 ;;		_main
   423 ;; This function uses a non-reentrant model
   424 ;;
   425                           
   426     07DA                     _process_io:	
   427                           ;psect for function _process_io
   428                           
   429     07DA                     l588:	
   430                           ;incstack = 0
   431                           ; Regs used in _process_io: [wreg+status,2+status,0]
   432                           
   433     07DA  1283               	bcf	3,5	;RP0=0, select bank0
   434     07DB  1303               	bcf	3,6	;RP1=0, select bank0
   435     07DC  0806               	movf	6,w	;volatile
   436     07DD  00F0               	movwf	_raw_input
   437     07DE                     l590:
   438     07DE  30F0               	movlw	240
   439     07DF  05F0               	andwf	_raw_input,f
   440     07E0                     l592:
   441     07E0  0870               	movf	_raw_input,w
   442     07E1  00F2               	movwf	_positive_out
   443     07E2  0872               	movf	_positive_out,w
   444     07E3  00F3               	movwf	??_process_io
   445     07E4  3004               	movlw	4
   446     07E5                     u15:
   447     07E5  1003               	clrc
   448     07E6  0CF3               	rrf	??_process_io,f
   449     07E7  3EFF               	addlw	-1
   450     07E8  1D03               	skipz
   451     07E9  2FE5               	goto	u15
   452     07EA  0873               	movf	??_process_io,w
   453     07EB  3AFF               	xorlw	255
   454     07EC  00F1               	movwf	_negative_out
   455     07ED  300F               	movlw	15
   456     07EE  05F1               	andwf	_negative_out,f
   457     07EF  0872               	movf	_positive_out,w
   458     07F0  0471               	iorwf	_negative_out,w
   459     07F1  0087               	movwf	7	;volatile
   460     07F2  30F0               	movlw	240
   461     07F3  0672               	xorwf	_positive_out,w
   462     07F4  1D03               	btfss	3,2
   463     07F5  2FF7               	goto	u21
   464     07F6  2FF8               	goto	u20
   465     07F7                     u21:
   466     07F7  2FFB               	goto	l38
   467     07F8                     u20:
   468     07F8                     l594:
   469     07F8  30DF               	movlw	223
   470     07F9  0585               	andwf	5,f	;volatile
   471     07FA  2FFC               	goto	l40
   472     07FB                     l38:
   473     07FB  1685               	bsf	5,5	;volatile
   474     07FC                     l40:
   475     07FC  0008               	return
   476     07FD                     __end_of_process_io:
   477     0001                     ___latbits      equ	1
   478     007E                     btemp           set	126	;btemp
   479     007E                     wtemp0          set	126
   480                           
   481                           	psect	config
   482                           
   483                           ;Config register CONFIG @ 0x2007
   484                           ;	Oscillator Selection bits
   485                           ;	FOSC = INTRCIO, INTOSCIO oscillator: I/O function on RA4/OSC2/CLKOUT pin, I/O function
      +                           on RA5/OSC1/CLKIN
   486                           ;	Watchdog Timer Enable bit
   487                           ;	WDTE = ON, WDT enabled
   488                           ;	Power-up Timer Enable bit
   489                           ;	PWRTE = OFF, PWRT disabled
   490                           ;	MCLR Pin Function Select bit
   491                           ;	MCLRE = ON, MCLR pin function is MCLR
   492                           ;	Code Protection bit
   493                           ;	CP = OFF, Program memory code protection is disabled
   494                           ;	Data Code Protection bit
   495                           ;	CPD = OFF, Data memory code protection is disabled
   496                           ;	Brown-out Reset Selection bits
   497                           ;	BOREN = ON, BOR enabled
   498                           ;	Internal External Switchover bit
   499                           ;	IESO = ON, Internal External Switchover mode is enabled
   500                           ;	Fail-Safe Clock Monitor Enabled bit
   501                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   502     2007                     	org	8199
   503     2007  3FFC               	dw	16380

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      1       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_process_io

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                         _process_io
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _process_io                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _process_io
   _system_init

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
COMMON              14      1       4     28.6%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       4      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Sep 12 12:01:55 2024

                     l40 07FC                       l35 07D9                       l38 07FB  
                     u20 07F8                       u21 07F7                       u15 07E5  
    __end_of_system_init 07DA                      l590 07DE                      l592 07E0  
                    l584 07BD                      l594 07F8                      l586 07C9  
                    l588 07DA                      l596 07B4                      l598 07B7  
                   _main 07B4                     btemp 007E                     start 0000  
                  ?_main 0073                    _ANSEL 011E                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    status 0003  
                  wtemp0 007E          __initialization 07FD              _system_init 07BD  
           __end_of_main 07BD                   ??_main 0074  __end_of__initialization 07FD  
         __pcstackCOMMON 0073               __pnvCOMMON 0070               __pmaintext 07B4  
           ?_system_init 0073                  __ptext1 07BD                  __ptext2 07DA  
   end_of_initialization 07FD               _process_io 07DA      start_initialization 07FD  
           _negative_out 0071              ?_process_io 0073                ___latbits 0001  
              _raw_input 0070             ??_process_io 0073       __end_of_process_io 07FD  
          ??_system_init 0073             _positive_out 0072  
