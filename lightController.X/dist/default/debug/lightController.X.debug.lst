

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Sep 17 16:58:15 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F690
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     8                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F690 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0004                     fsr             equ	4
    49     0004                     fsr0            equ	4
    50     0000                     indf            equ	0
    51     0000                     indf0           equ	0
    52     0002                     pc              equ	2
    53     0002                     pcl             equ	2
    54     000A                     pclath          equ	10
    55     0003                     status          equ	3
    56     0000                     INDF            equ	0	;# 
    57     0001                     TMR0            equ	1	;# 
    58     0002                     PCL             equ	2	;# 
    59     0003                     STATUS          equ	3	;# 
    60     0004                     FSR             equ	4	;# 
    61     0005                     PORTA           equ	5	;# 
    62     0006                     PORTB           equ	6	;# 
    63     0007                     PORTC           equ	7	;# 
    64     000A                     PCLATH          equ	10	;# 
    65     000B                     INTCON          equ	11	;# 
    66     000C                     PIR1            equ	12	;# 
    67     000D                     PIR2            equ	13	;# 
    68     000E                     TMR1            equ	14	;# 
    69     000E                     TMR1L           equ	14	;# 
    70     000F                     TMR1H           equ	15	;# 
    71     0010                     T1CON           equ	16	;# 
    72     0011                     TMR2            equ	17	;# 
    73     0012                     T2CON           equ	18	;# 
    74     0013                     SSPBUF          equ	19	;# 
    75     0014                     SSPCON          equ	20	;# 
    76     0015                     CCPR            equ	21	;# 
    77     0015                     CCPR1L          equ	21	;# 
    78     0016                     CCPR1H          equ	22	;# 
    79     0017                     CCP1CON         equ	23	;# 
    80     0018                     RCSTA           equ	24	;# 
    81     0019                     TXREG           equ	25	;# 
    82     001A                     RCREG           equ	26	;# 
    83     001C                     PWM1CON         equ	28	;# 
    84     001D                     ECCPAS          equ	29	;# 
    85     001E                     ADRESH          equ	30	;# 
    86     001F                     ADCON0          equ	31	;# 
    87     0081                     OPTION_REG      equ	129	;# 
    88     0085                     TRISA           equ	133	;# 
    89     0086                     TRISB           equ	134	;# 
    90     0087                     TRISC           equ	135	;# 
    91     008C                     PIE1            equ	140	;# 
    92     008D                     PIE2            equ	141	;# 
    93     008E                     PCON            equ	142	;# 
    94     008F                     OSCCON          equ	143	;# 
    95     0090                     OSCTUNE         equ	144	;# 
    96     0092                     PR2             equ	146	;# 
    97     0093                     SSPADD          equ	147	;# 
    98     0093                     SSPMSK          equ	147	;# 
    99     0093                     MSK             equ	147	;# 
   100     0094                     SSPSTAT         equ	148	;# 
   101     0095                     WPUA            equ	149	;# 
   102     0095                     WPU             equ	149	;# 
   103     0096                     IOCA            equ	150	;# 
   104     0096                     IOC             equ	150	;# 
   105     0097                     WDTCON          equ	151	;# 
   106     0098                     TXSTA           equ	152	;# 
   107     0099                     SPBRG           equ	153	;# 
   108     009A                     SPBRGH          equ	154	;# 
   109     009B                     BAUDCTL         equ	155	;# 
   110     009E                     ADRESL          equ	158	;# 
   111     009F                     ADCON1          equ	159	;# 
   112     010C                     EEDAT           equ	268	;# 
   113     010C                     EEDATA          equ	268	;# 
   114     010D                     EEADR           equ	269	;# 
   115     010E                     EEDATH          equ	270	;# 
   116     010F                     EEADRH          equ	271	;# 
   117     0115                     WPUB            equ	277	;# 
   118     0116                     IOCB            equ	278	;# 
   119     0118                     VRCON           equ	280	;# 
   120     0119                     CM1CON0         equ	281	;# 
   121     011A                     CM2CON0         equ	282	;# 
   122     011B                     CM2CON1         equ	283	;# 
   123     011E                     ANSEL           equ	286	;# 
   124     011F                     ANSELH          equ	287	;# 
   125     018C                     EECON1          equ	396	;# 
   126     018D                     EECON2          equ	397	;# 
   127     019D                     PSTRCON         equ	413	;# 
   128     019E                     SRCON           equ	414	;# 
   129     0000                     INDF            equ	0	;# 
   130     0001                     TMR0            equ	1	;# 
   131     0002                     PCL             equ	2	;# 
   132     0003                     STATUS          equ	3	;# 
   133     0004                     FSR             equ	4	;# 
   134     0005                     PORTA           equ	5	;# 
   135     0006                     PORTB           equ	6	;# 
   136     0007                     PORTC           equ	7	;# 
   137     000A                     PCLATH          equ	10	;# 
   138     000B                     INTCON          equ	11	;# 
   139     000C                     PIR1            equ	12	;# 
   140     000D                     PIR2            equ	13	;# 
   141     000E                     TMR1            equ	14	;# 
   142     000E                     TMR1L           equ	14	;# 
   143     000F                     TMR1H           equ	15	;# 
   144     0010                     T1CON           equ	16	;# 
   145     0011                     TMR2            equ	17	;# 
   146     0012                     T2CON           equ	18	;# 
   147     0013                     SSPBUF          equ	19	;# 
   148     0014                     SSPCON          equ	20	;# 
   149     0015                     CCPR            equ	21	;# 
   150     0015                     CCPR1L          equ	21	;# 
   151     0016                     CCPR1H          equ	22	;# 
   152     0017                     CCP1CON         equ	23	;# 
   153     0018                     RCSTA           equ	24	;# 
   154     0019                     TXREG           equ	25	;# 
   155     001A                     RCREG           equ	26	;# 
   156     001C                     PWM1CON         equ	28	;# 
   157     001D                     ECCPAS          equ	29	;# 
   158     001E                     ADRESH          equ	30	;# 
   159     001F                     ADCON0          equ	31	;# 
   160     0081                     OPTION_REG      equ	129	;# 
   161     0085                     TRISA           equ	133	;# 
   162     0086                     TRISB           equ	134	;# 
   163     0087                     TRISC           equ	135	;# 
   164     008C                     PIE1            equ	140	;# 
   165     008D                     PIE2            equ	141	;# 
   166     008E                     PCON            equ	142	;# 
   167     008F                     OSCCON          equ	143	;# 
   168     0090                     OSCTUNE         equ	144	;# 
   169     0092                     PR2             equ	146	;# 
   170     0093                     SSPADD          equ	147	;# 
   171     0093                     SSPMSK          equ	147	;# 
   172     0093                     MSK             equ	147	;# 
   173     0094                     SSPSTAT         equ	148	;# 
   174     0095                     WPUA            equ	149	;# 
   175     0095                     WPU             equ	149	;# 
   176     0096                     IOCA            equ	150	;# 
   177     0096                     IOC             equ	150	;# 
   178     0097                     WDTCON          equ	151	;# 
   179     0098                     TXSTA           equ	152	;# 
   180     0099                     SPBRG           equ	153	;# 
   181     009A                     SPBRGH          equ	154	;# 
   182     009B                     BAUDCTL         equ	155	;# 
   183     009E                     ADRESL          equ	158	;# 
   184     009F                     ADCON1          equ	159	;# 
   185     010C                     EEDAT           equ	268	;# 
   186     010C                     EEDATA          equ	268	;# 
   187     010D                     EEADR           equ	269	;# 
   188     010E                     EEDATH          equ	270	;# 
   189     010F                     EEADRH          equ	271	;# 
   190     0115                     WPUB            equ	277	;# 
   191     0116                     IOCB            equ	278	;# 
   192     0118                     VRCON           equ	280	;# 
   193     0119                     CM1CON0         equ	281	;# 
   194     011A                     CM2CON0         equ	282	;# 
   195     011B                     CM2CON1         equ	283	;# 
   196     011E                     ANSEL           equ	286	;# 
   197     011F                     ANSELH          equ	287	;# 
   198     018C                     EECON1          equ	396	;# 
   199     018D                     EECON2          equ	397	;# 
   200     019D                     PSTRCON         equ	413	;# 
   201     019E                     SRCON           equ	414	;# 
   202     0007                     _PORTC          set	7
   203     0006                     _PORTB          set	6
   204     0005                     _PORTA          set	5
   205     000B                     _INTCON         set	11
   206     0081                     _OPTION_REG     set	129
   207     0087                     _TRISC          set	135
   208     0086                     _TRISB          set	134
   209     0085                     _TRISA          set	133
   210     011E                     _ANSEL          set	286
   211                           
   212                           	psect	cinit
   213     07FA                     start_initialization:	
   214                           ; #config settings
   215                           
   216     07FA                     __initialization:
   217                           
   218                           ; Clear objects allocated to COMMON
   219     07FA  01F0               	clrf	__pbssCOMMON& (0+127)
   220     07FB  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   221     07FC  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   222     07FD                     end_of_initialization:	
   223                           ;End of C runtime variable initialization code
   224                           
   225     07FD                     __end_of__initialization:
   226     07FD  0183               	clrf	3
   227     07FE  118A  2FA6         	ljmp	_main	;jump to C main() function
   228                           
   229                           	psect	bssCOMMON
   230     0070                     __pbssCOMMON:
   231     0070                     _raw_input:
   232     0070                     	ds	1
   233     0071                     _negative_out:
   234     0071                     	ds	1
   235     0072                     _positive_out:
   236     0072                     	ds	1
   237                           
   238                           	psect	cstackCOMMON
   239     0073                     __pcstackCOMMON:
   240     0073                     ?_system_init:
   241     0073                     ?_init_timer0:	
   242                           ; 1 bytes @ 0x0
   243                           
   244     0073                     ?_process_io:	
   245                           ; 1 bytes @ 0x0
   246                           
   247     0073                     ?_main:	
   248                           ; 1 bytes @ 0x0
   249                           
   250     0073                     ??_system_init:	
   251                           ; 1 bytes @ 0x0
   252                           
   253     0073                     ??_init_timer0:	
   254                           ; 1 bytes @ 0x0
   255                           
   256     0073                     ??_process_io:	
   257                           ; 1 bytes @ 0x0
   258                           
   259                           
   260                           ; 1 bytes @ 0x0
   261     0073                     	ds	1
   262     0074                     ??_main:
   263                           
   264                           	psect	maintext
   265     07A6                     __pmaintext:	
   266                           ; 1 bytes @ 0x1
   267 ;;
   268 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   269 ;;
   270 ;; *************** function _main *****************
   271 ;; Defined at:
   272 ;;		line 30 in file "main.c"
   273 ;; Parameters:    Size  Location     Type
   274 ;;		None
   275 ;; Auto vars:     Size  Location     Type
   276 ;;		None
   277 ;; Return value:  Size  Location     Type
   278 ;;                  1    wreg      void 
   279 ;; Registers used:
   280 ;;		wreg, status,2, status,0, pclath, cstack
   281 ;; Tracked objects:
   282 ;;		On entry : B00/0
   283 ;;		On exit  : 0/0
   284 ;;		Unchanged: 0/0
   285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   286 ;;      Params:         0       0       0       0
   287 ;;      Locals:         0       0       0       0
   288 ;;      Temps:          0       0       0       0
   289 ;;      Totals:         0       0       0       0
   290 ;;Total ram usage:        0 bytes
   291 ;; Hardware stack levels required when called: 1
   292 ;; This function calls:
   293 ;;		_init_timer0
   294 ;;		_process_io
   295 ;;		_system_init
   296 ;; This function is called by:
   297 ;;		Startup code after reset
   298 ;; This function uses a non-reentrant model
   299 ;;
   300                           
   301     07A6                     _main:	
   302                           ;psect for function _main
   303                           
   304     07A6                     l618:	
   305                           ;incstack = 0
   306                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   307                           
   308                           
   309                           ;main.c: 32: 
   310     07A6  118A  27B8  118A   	fcall	_system_init
   311                           
   312                           ;main.c: 34:     TRISB = 0xf0;
   313     07A9  118A  279B  118A   	fcall	_init_timer0
   314     07AC                     l36:
   315     07AC  1D0B               	btfss	11,2	;volatile
   316     07AD  2FAF               	goto	u31
   317     07AE  2FB0               	goto	u30
   318     07AF                     u31:
   319     07AF  2FAC               	goto	l36
   320     07B0                     u30:
   321     07B0                     l620:
   322                           
   323                           ;main.c: 40: 
   324     07B0  118A  27D7  118A   	fcall	_process_io
   325     07B3                     l622:
   326                           
   327                           ;main.c: 43:     raw_input = 0;
   328     07B3  30FB               	movlw	251
   329     07B4  058B               	andwf	11,f	;volatile
   330     07B5  2FAC               	goto	l36
   331     07B6  118A  2800         	ljmp	start
   332     07B8                     __end_of_main:
   333                           
   334                           	psect	text1
   335     07B8                     __ptext1:	
   336 ;; *************** function _system_init *****************
   337 ;; Defined at:
   338 ;;		line 47 in file "main.c"
   339 ;; Parameters:    Size  Location     Type
   340 ;;		None
   341 ;; Auto vars:     Size  Location     Type
   342 ;;		None
   343 ;; Return value:  Size  Location     Type
   344 ;;                  1    wreg      void 
   345 ;; Registers used:
   346 ;;		wreg, status,2, status,0
   347 ;; Tracked objects:
   348 ;;		On entry : 0/0
   349 ;;		On exit  : 0/0
   350 ;;		Unchanged: 0/0
   351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   352 ;;      Params:         0       0       0       0
   353 ;;      Locals:         0       0       0       0
   354 ;;      Temps:          0       0       0       0
   355 ;;      Totals:         0       0       0       0
   356 ;;Total ram usage:        0 bytes
   357 ;; Hardware stack levels used: 1
   358 ;; This function calls:
   359 ;;		Nothing
   360 ;; This function is called by:
   361 ;;		_main
   362 ;; This function uses a non-reentrant model
   363 ;;
   364                           
   365     07B8                     _system_init:	
   366                           ;psect for function _system_init
   367                           
   368     07B8                     l596:	
   369                           ;incstack = 0
   370                           ; Regs used in _system_init: [wreg+status,2+status,0]
   371                           
   372                           
   373                           ;main.c: 51: 
   374     07B8  1283               	bcf	3,5	;RP0=0, select bank0
   375     07B9  1303               	bcf	3,6	;RP1=0, select bank0
   376     07BA  0185               	clrf	5	;volatile
   377                           
   378                           ;main.c: 52:     OPTION_REG &= ~0x08;
   379     07BB  1283               	bcf	3,5	;RP0=0, select bank2
   380     07BC  1703               	bsf	3,6	;RP1=1, select bank2
   381     07BD  019E               	clrf	30	;volatile
   382                           
   383                           ;main.c: 53: 
   384     07BE  1683               	bsf	3,5	;RP0=1, select bank1
   385     07BF  1303               	bcf	3,6	;RP1=0, select bank1
   386     07C0  0185               	clrf	5	;volatile
   387                           
   388                           ;main.c: 55:     OPTION_REG &= ~0x01;
   389     07C1  1283               	bcf	3,5	;RP0=0, select bank0
   390     07C2  1303               	bcf	3,6	;RP1=0, select bank0
   391     07C3  0186               	clrf	6	;volatile
   392     07C4                     l598:
   393                           
   394                           ;main.c: 56: }
   395     07C4  30F0               	movlw	240
   396     07C5  1683               	bsf	3,5	;RP0=1, select bank1
   397     07C6  1303               	bcf	3,6	;RP1=0, select bank1
   398     07C7  0086               	movwf	6	;volatile
   399                           
   400                           ;main.c: 58: void process_io(void){
   401     07C8  1283               	bcf	3,5	;RP0=0, select bank0
   402     07C9  1303               	bcf	3,6	;RP1=0, select bank0
   403     07CA  0187               	clrf	7	;volatile
   404                           
   405                           ;main.c: 59: 
   406     07CB  1283               	bcf	3,5	;RP0=0, select bank2
   407     07CC  1703               	bsf	3,6	;RP1=1, select bank2
   408     07CD  019E               	clrf	30	;volatile
   409                           
   410                           ;main.c: 60: 
   411     07CE  1683               	bsf	3,5	;RP0=1, select bank1
   412     07CF  1303               	bcf	3,6	;RP1=0, select bank1
   413     07D0  0187               	clrf	7	;volatile
   414     07D1                     l600:
   415                           
   416                           ;main.c: 63:     positive_out = raw_input;
   417     07D1  307F               	movlw	127
   418     07D2  0581               	andwf	1,f	;volatile
   419     07D3                     l602:
   420                           
   421                           ;main.c: 65: 
   422     07D3  01F0               	clrf	_raw_input
   423     07D4                     l604:
   424                           
   425                           ;main.c: 66: 
   426     07D4  01F2               	clrf	_positive_out
   427     07D5                     l606:
   428                           
   429                           ;main.c: 67:     PORTC = (positive_out | negative_out);
   430     07D5  01F1               	clrf	_negative_out
   431     07D6                     l44:
   432     07D6  0008               	return
   433     07D7                     __end_of_system_init:
   434                           
   435                           	psect	text2
   436     07D7                     __ptext2:	
   437 ;; *************** function _process_io *****************
   438 ;; Defined at:
   439 ;;		line 80 in file "main.c"
   440 ;; Parameters:    Size  Location     Type
   441 ;;		None
   442 ;; Auto vars:     Size  Location     Type
   443 ;;		None
   444 ;; Return value:  Size  Location     Type
   445 ;;                  1    wreg      void 
   446 ;; Registers used:
   447 ;;		wreg, status,2, status,0
   448 ;; Tracked objects:
   449 ;;		On entry : 0/0
   450 ;;		On exit  : 0/0
   451 ;;		Unchanged: 0/0
   452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   453 ;;      Params:         0       0       0       0
   454 ;;      Locals:         0       0       0       0
   455 ;;      Temps:          1       0       0       0
   456 ;;      Totals:         1       0       0       0
   457 ;;Total ram usage:        1 bytes
   458 ;; Hardware stack levels used: 1
   459 ;; This function calls:
   460 ;;		Nothing
   461 ;; This function is called by:
   462 ;;		_main
   463 ;; This function uses a non-reentrant model
   464 ;;
   465                           
   466     07D7                     _process_io:	
   467                           ;psect for function _process_io
   468                           
   469     07D7                     l610:	
   470                           ;incstack = 0
   471                           ; Regs used in _process_io: [wreg+status,2+status,0]
   472                           
   473     07D7  1283               	bcf	3,5	;RP0=0, select bank0
   474     07D8  1303               	bcf	3,6	;RP1=0, select bank0
   475     07D9  0806               	movf	6,w	;volatile
   476     07DA  00F0               	movwf	_raw_input
   477     07DB                     l612:
   478     07DB  30F0               	movlw	240
   479     07DC  05F0               	andwf	_raw_input,f
   480     07DD                     l614:
   481     07DD  0870               	movf	_raw_input,w
   482     07DE  00F2               	movwf	_positive_out
   483     07DF  0872               	movf	_positive_out,w
   484     07E0  00F3               	movwf	??_process_io
   485     07E1  3004               	movlw	4
   486     07E2                     u15:
   487     07E2  1003               	clrc
   488     07E3  0CF3               	rrf	??_process_io,f
   489     07E4  3EFF               	addlw	-1
   490     07E5  1D03               	skipz
   491     07E6  2FE2               	goto	u15
   492     07E7  0873               	movf	??_process_io,w
   493     07E8  3AFF               	xorlw	255
   494     07E9  00F1               	movwf	_negative_out
   495     07EA  300F               	movlw	15
   496     07EB  05F1               	andwf	_negative_out,f
   497     07EC  0872               	movf	_positive_out,w
   498     07ED  0471               	iorwf	_negative_out,w
   499     07EE  0087               	movwf	7	;volatile
   500     07EF  30F0               	movlw	240
   501     07F0  0672               	xorwf	_positive_out,w
   502     07F1  1D03               	btfss	3,2
   503     07F2  2FF4               	goto	u21
   504     07F3  2FF5               	goto	u20
   505     07F4                     u21:
   506     07F4  2FF8               	goto	l50
   507     07F5                     u20:
   508     07F5                     l616:
   509     07F5  30DF               	movlw	223
   510     07F6  0585               	andwf	5,f	;volatile
   511     07F7  2FF9               	goto	l52
   512     07F8                     l50:
   513     07F8  1685               	bsf	5,5	;volatile
   514     07F9                     l52:
   515     07F9  0008               	return
   516     07FA                     __end_of_process_io:
   517                           
   518                           	psect	text3
   519     079B                     __ptext3:	
   520 ;; *************** function _init_timer0 *****************
   521 ;; Defined at:
   522 ;;		line 70 in file "main.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;		None
   525 ;; Auto vars:     Size  Location     Type
   526 ;;		None
   527 ;; Return value:  Size  Location     Type
   528 ;;                  1    wreg      void 
   529 ;; Registers used:
   530 ;;		wreg, status,2, status,0
   531 ;; Tracked objects:
   532 ;;		On entry : 0/0
   533 ;;		On exit  : 0/0
   534 ;;		Unchanged: 0/0
   535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   536 ;;      Params:         0       0       0       0
   537 ;;      Locals:         0       0       0       0
   538 ;;      Temps:          0       0       0       0
   539 ;;      Totals:         0       0       0       0
   540 ;;Total ram usage:        0 bytes
   541 ;; Hardware stack levels used: 1
   542 ;; This function calls:
   543 ;;		Nothing
   544 ;; This function is called by:
   545 ;;		_main
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           
   549     079B                     _init_timer0:	
   550                           ;psect for function _init_timer0
   551                           
   552     079B                     l608:	
   553                           ;incstack = 0
   554                           ; Regs used in _init_timer0: [wreg+status,2+status,0]
   555                           
   556                           
   557                           ;main.c: 72:     } else {
   558     079B  30DF               	movlw	223
   559     079C  1683               	bsf	3,5	;RP0=1, select bank1
   560     079D  1303               	bcf	3,6	;RP1=0, select bank1
   561     079E  0581               	andwf	1,f	;volatile
   562                           
   563                           ;main.c: 74:         PORTA |= 0x20;
   564     079F  30F7               	movlw	247
   565     07A0  0581               	andwf	1,f	;volatile
   566                           
   567                           ;main.c: 76: }
   568     07A1  3007               	movlw	7
   569     07A2  0481               	iorwf	1,f	;volatile
   570     07A3  30FE               	movlw	254
   571     07A4  0581               	andwf	1,f	;volatile
   572     07A5                     l47:
   573     07A5  0008               	return
   574     07A6                     __end_of_init_timer0:
   575     0001                     ___latbits      equ	1
   576     007E                     btemp           set	126	;btemp
   577     007E                     wtemp0          set	126
   578                           
   579                           	psect	config
   580                           
   581                           ;Config register CONFIG @ 0x2007
   582                           ;	Oscillator Selection bits
   583                           ;	FOSC = INTRCIO, INTOSCIO oscillator: I/O function on RA4/OSC2/CLKOUT pin, I/O function
      +                           on RA5/OSC1/CLKIN
   584                           ;	Watchdog Timer Enable bit
   585                           ;	WDTE = ON, WDT enabled
   586                           ;	Power-up Timer Enable bit
   587                           ;	PWRTE = OFF, PWRT disabled
   588                           ;	MCLR Pin Function Select bit
   589                           ;	MCLRE = ON, MCLR pin function is MCLR
   590                           ;	Code Protection bit
   591                           ;	CP = OFF, Program memory code protection is disabled
   592                           ;	Data Code Protection bit
   593                           ;	CPD = OFF, Data memory code protection is disabled
   594                           ;	Brown-out Reset Selection bits
   595                           ;	BOREN = ON, BOR enabled
   596                           ;	Internal External Switchover bit
   597                           ;	IESO = ON, Internal External Switchover mode is enabled
   598                           ;	Fail-Safe Clock Monitor Enabled bit
   599                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   600     2007                     	org	8199
   601     2007  3FFC               	dw	16380

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      1       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_process_io

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _init_timer0
                         _process_io
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _process_io                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_timer0
   _process_io
   _system_init

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
COMMON              14      1       4     28.6%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       4      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Sep 17 16:58:15 2024

                     l50 07F8                       l52 07F9                       l44 07D6  
                     l36 07AC                       l47 07A5                       u20 07F5  
                     u21 07F4                       u30 07B0                       u15 07E2  
                     u31 07AF      __end_of_system_init 07D7                      l600 07D1  
                    l610 07D7                      l602 07D3                      l612 07DB  
                    l604 07D4                      l620 07B0                      l614 07DD  
                    l606 07D5                      l622 07B3                      l608 079B  
                    l616 07F5                      l618 07A6                      l596 07B8  
                    l598 07C4                     _main 07A6                     btemp 007E  
                   start 0000                    ?_main 0073                    _ANSEL 011E  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
           ?_init_timer0 0073                    status 0003                    wtemp0 007E  
        __initialization 07FA              _system_init 07B8             __end_of_main 07B8  
                 ??_main 0074                   _INTCON 000B  __end_of__initialization 07FD  
         __pcstackCOMMON 0073               __pmaintext 07A6             ?_system_init 0073  
                __ptext1 07B8                  __ptext2 07D7                  __ptext3 079B  
   end_of_initialization 07FD               _process_io 07D7      start_initialization 07FA  
           _negative_out 0071              ?_process_io 0073            ??_init_timer0 0073  
            __pbssCOMMON 0070                ___latbits 0001      __end_of_init_timer0 07A6  
              _raw_input 0070              _init_timer0 079B             ??_process_io 0073  
     __end_of_process_io 07FA            ??_system_init 0073               _OPTION_REG 0081  
           _positive_out 0072  
