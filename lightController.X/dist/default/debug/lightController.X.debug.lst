

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Oct 01 15:14:02 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F690
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     9                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 12/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F690 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0004                     fsr             equ	4
    50     0004                     fsr0            equ	4
    51     0000                     indf            equ	0
    52     0000                     indf0           equ	0
    53     0002                     pc              equ	2
    54     0002                     pcl             equ	2
    55     000A                     pclath          equ	10
    56     0003                     status          equ	3
    57     0000                     INDF            equ	0	;# 
    58     0001                     TMR0            equ	1	;# 
    59     0002                     PCL             equ	2	;# 
    60     0003                     STATUS          equ	3	;# 
    61     0004                     FSR             equ	4	;# 
    62     0005                     PORTA           equ	5	;# 
    63     0006                     PORTB           equ	6	;# 
    64     0007                     PORTC           equ	7	;# 
    65     000A                     PCLATH          equ	10	;# 
    66     000B                     INTCON          equ	11	;# 
    67     000C                     PIR1            equ	12	;# 
    68     000D                     PIR2            equ	13	;# 
    69     000E                     TMR1            equ	14	;# 
    70     000E                     TMR1L           equ	14	;# 
    71     000F                     TMR1H           equ	15	;# 
    72     0010                     T1CON           equ	16	;# 
    73     0011                     TMR2            equ	17	;# 
    74     0012                     T2CON           equ	18	;# 
    75     0013                     SSPBUF          equ	19	;# 
    76     0014                     SSPCON          equ	20	;# 
    77     0015                     CCPR            equ	21	;# 
    78     0015                     CCPR1L          equ	21	;# 
    79     0016                     CCPR1H          equ	22	;# 
    80     0017                     CCP1CON         equ	23	;# 
    81     0018                     RCSTA           equ	24	;# 
    82     0019                     TXREG           equ	25	;# 
    83     001A                     RCREG           equ	26	;# 
    84     001C                     PWM1CON         equ	28	;# 
    85     001D                     ECCPAS          equ	29	;# 
    86     001E                     ADRESH          equ	30	;# 
    87     001F                     ADCON0          equ	31	;# 
    88     0081                     OPTION_REG      equ	129	;# 
    89     0085                     TRISA           equ	133	;# 
    90     0086                     TRISB           equ	134	;# 
    91     0087                     TRISC           equ	135	;# 
    92     008C                     PIE1            equ	140	;# 
    93     008D                     PIE2            equ	141	;# 
    94     008E                     PCON            equ	142	;# 
    95     008F                     OSCCON          equ	143	;# 
    96     0090                     OSCTUNE         equ	144	;# 
    97     0092                     PR2             equ	146	;# 
    98     0093                     SSPADD          equ	147	;# 
    99     0093                     SSPMSK          equ	147	;# 
   100     0093                     MSK             equ	147	;# 
   101     0094                     SSPSTAT         equ	148	;# 
   102     0095                     WPUA            equ	149	;# 
   103     0095                     WPU             equ	149	;# 
   104     0096                     IOCA            equ	150	;# 
   105     0096                     IOC             equ	150	;# 
   106     0097                     WDTCON          equ	151	;# 
   107     0098                     TXSTA           equ	152	;# 
   108     0099                     SPBRG           equ	153	;# 
   109     009A                     SPBRGH          equ	154	;# 
   110     009B                     BAUDCTL         equ	155	;# 
   111     009E                     ADRESL          equ	158	;# 
   112     009F                     ADCON1          equ	159	;# 
   113     010C                     EEDAT           equ	268	;# 
   114     010C                     EEDATA          equ	268	;# 
   115     010D                     EEADR           equ	269	;# 
   116     010E                     EEDATH          equ	270	;# 
   117     010F                     EEADRH          equ	271	;# 
   118     0115                     WPUB            equ	277	;# 
   119     0116                     IOCB            equ	278	;# 
   120     0118                     VRCON           equ	280	;# 
   121     0119                     CM1CON0         equ	281	;# 
   122     011A                     CM2CON0         equ	282	;# 
   123     011B                     CM2CON1         equ	283	;# 
   124     011E                     ANSEL           equ	286	;# 
   125     011F                     ANSELH          equ	287	;# 
   126     018C                     EECON1          equ	396	;# 
   127     018D                     EECON2          equ	397	;# 
   128     019D                     PSTRCON         equ	413	;# 
   129     019E                     SRCON           equ	414	;# 
   130     0000                     INDF            equ	0	;# 
   131     0001                     TMR0            equ	1	;# 
   132     0002                     PCL             equ	2	;# 
   133     0003                     STATUS          equ	3	;# 
   134     0004                     FSR             equ	4	;# 
   135     0005                     PORTA           equ	5	;# 
   136     0006                     PORTB           equ	6	;# 
   137     0007                     PORTC           equ	7	;# 
   138     000A                     PCLATH          equ	10	;# 
   139     000B                     INTCON          equ	11	;# 
   140     000C                     PIR1            equ	12	;# 
   141     000D                     PIR2            equ	13	;# 
   142     000E                     TMR1            equ	14	;# 
   143     000E                     TMR1L           equ	14	;# 
   144     000F                     TMR1H           equ	15	;# 
   145     0010                     T1CON           equ	16	;# 
   146     0011                     TMR2            equ	17	;# 
   147     0012                     T2CON           equ	18	;# 
   148     0013                     SSPBUF          equ	19	;# 
   149     0014                     SSPCON          equ	20	;# 
   150     0015                     CCPR            equ	21	;# 
   151     0015                     CCPR1L          equ	21	;# 
   152     0016                     CCPR1H          equ	22	;# 
   153     0017                     CCP1CON         equ	23	;# 
   154     0018                     RCSTA           equ	24	;# 
   155     0019                     TXREG           equ	25	;# 
   156     001A                     RCREG           equ	26	;# 
   157     001C                     PWM1CON         equ	28	;# 
   158     001D                     ECCPAS          equ	29	;# 
   159     001E                     ADRESH          equ	30	;# 
   160     001F                     ADCON0          equ	31	;# 
   161     0081                     OPTION_REG      equ	129	;# 
   162     0085                     TRISA           equ	133	;# 
   163     0086                     TRISB           equ	134	;# 
   164     0087                     TRISC           equ	135	;# 
   165     008C                     PIE1            equ	140	;# 
   166     008D                     PIE2            equ	141	;# 
   167     008E                     PCON            equ	142	;# 
   168     008F                     OSCCON          equ	143	;# 
   169     0090                     OSCTUNE         equ	144	;# 
   170     0092                     PR2             equ	146	;# 
   171     0093                     SSPADD          equ	147	;# 
   172     0093                     SSPMSK          equ	147	;# 
   173     0093                     MSK             equ	147	;# 
   174     0094                     SSPSTAT         equ	148	;# 
   175     0095                     WPUA            equ	149	;# 
   176     0095                     WPU             equ	149	;# 
   177     0096                     IOCA            equ	150	;# 
   178     0096                     IOC             equ	150	;# 
   179     0097                     WDTCON          equ	151	;# 
   180     0098                     TXSTA           equ	152	;# 
   181     0099                     SPBRG           equ	153	;# 
   182     009A                     SPBRGH          equ	154	;# 
   183     009B                     BAUDCTL         equ	155	;# 
   184     009E                     ADRESL          equ	158	;# 
   185     009F                     ADCON1          equ	159	;# 
   186     010C                     EEDAT           equ	268	;# 
   187     010C                     EEDATA          equ	268	;# 
   188     010D                     EEADR           equ	269	;# 
   189     010E                     EEDATH          equ	270	;# 
   190     010F                     EEADRH          equ	271	;# 
   191     0115                     WPUB            equ	277	;# 
   192     0116                     IOCB            equ	278	;# 
   193     0118                     VRCON           equ	280	;# 
   194     0119                     CM1CON0         equ	281	;# 
   195     011A                     CM2CON0         equ	282	;# 
   196     011B                     CM2CON1         equ	283	;# 
   197     011E                     ANSEL           equ	286	;# 
   198     011F                     ANSELH          equ	287	;# 
   199     018C                     EECON1          equ	396	;# 
   200     018D                     EECON2          equ	397	;# 
   201     019D                     PSTRCON         equ	413	;# 
   202     019E                     SRCON           equ	414	;# 
   203                           
   204                           	psect	nvCOMMON
   205     0073                     __pnvCOMMON:
   206     0073                     _raw_input:
   207     0073                     	ds	1
   208     0007                     _PORTC          set	7
   209     0006                     _PORTB          set	6
   210     0005                     _PORTA          set	5
   211     0081                     _OPTION_REG     set	129
   212     0087                     _TRISC          set	135
   213     0086                     _TRISB          set	134
   214     0085                     _TRISA          set	133
   215     0115                     _WPUB           set	277
   216     011E                     _ANSEL          set	286
   217                           
   218                           	psect	cinit
   219     07FB                     start_initialization:	
   220                           ; #config settings
   221                           
   222     07FB                     __initialization:
   223                           
   224                           ; Clear objects allocated to COMMON
   225     07FB  01F1               	clrf	__pbssCOMMON& (0+127)
   226     07FC  01F2               	clrf	(__pbssCOMMON+1)& (0+127)
   227     07FD                     end_of_initialization:	
   228                           ;End of C runtime variable initialization code
   229                           
   230     07FD                     __end_of__initialization:
   231     07FD  0183               	clrf	3
   232     07FE  118A  2FAD         	ljmp	_main	;jump to C main() function
   233                           
   234                           	psect	bssCOMMON
   235     0071                     __pbssCOMMON:
   236     0071                     _negative_out:
   237     0071                     	ds	1
   238     0072                     _positive_out:
   239     0072                     	ds	1
   240                           
   241                           	psect	cstackCOMMON
   242     0000                     __pcstackCOMMON:
   243     0000                     ?_system_init:
   244     0000                     ?_init_timer0:	
   245                           ; 1 bytes @ 0x0
   246                           
   247     0000                     ?_process_io:	
   248                           ; 1 bytes @ 0x0
   249                           
   250     0000                     ?_main:	
   251                           ; 1 bytes @ 0x0
   252                           
   253     0000                     ??_system_init:	
   254                           ; 1 bytes @ 0x0
   255                           
   256     0000                     ??_init_timer0:	
   257                           ; 1 bytes @ 0x0
   258                           
   259     0000                     ??_process_io:	
   260                           ; 1 bytes @ 0x0
   261                           
   262     0000                     ??_main:	
   263                           ; 1 bytes @ 0x0
   264                           
   265                           
   266                           	psect	maintext
   267     07AD                     __pmaintext:	
   268                           ; 1 bytes @ 0x0
   269 ;;
   270 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   271 ;;
   272 ;; *************** function _main *****************
   273 ;; Defined at:
   274 ;;		line 30 in file "main.c"
   275 ;; Parameters:    Size  Location     Type
   276 ;;		None
   277 ;; Auto vars:     Size  Location     Type
   278 ;;		None
   279 ;; Return value:  Size  Location     Type
   280 ;;                  1    wreg      void 
   281 ;; Registers used:
   282 ;;		wreg, status,2, status,0, pclath, cstack
   283 ;; Tracked objects:
   284 ;;		On entry : B00/0
   285 ;;		On exit  : 0/0
   286 ;;		Unchanged: 0/0
   287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   288 ;;      Params:         0       0       0       0
   289 ;;      Locals:         0       0       0       0
   290 ;;      Temps:          0       0       0       0
   291 ;;      Totals:         0       0       0       0
   292 ;;Total ram usage:        0 bytes
   293 ;; Hardware stack levels required when called: 1
   294 ;; This function calls:
   295 ;;		_init_timer0
   296 ;;		_process_io
   297 ;;		_system_init
   298 ;; This function is called by:
   299 ;;		Startup code after reset
   300 ;; This function uses a non-reentrant model
   301 ;;
   302                           
   303     07AD                     _main:	
   304                           ;psect for function _main
   305                           
   306     07AD                     l617:	
   307                           ;incstack = 0
   308                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   309                           
   310                           
   311                           ;main.c: 32:     PORTA = 0;
   312     07AD  118A  27D8  118A   	fcall	_system_init
   313                           
   314                           ;main.c: 34:     TRISA = 0x00;
   315     07B0  118A  27B9  118A   	fcall	_init_timer0
   316     07B3                     l35:	
   317                           ;main.c: 36:     PORTB = 0;
   318                           
   319                           
   320                           ;main.c: 40: 
   321     07B3  118A  27C6  118A   	fcall	_process_io
   322     07B6  2FB3               	goto	l35
   323     07B7  118A  2801         	ljmp	start
   324     07B9                     __end_of_main:
   325                           
   326                           	psect	text1
   327     07D8                     __ptext1:	
   328 ;; *************** function _system_init *****************
   329 ;; Defined at:
   330 ;;		line 50 in file "main.c"
   331 ;; Parameters:    Size  Location     Type
   332 ;;		None
   333 ;; Auto vars:     Size  Location     Type
   334 ;;		None
   335 ;; Return value:  Size  Location     Type
   336 ;;                  1    wreg      void 
   337 ;; Registers used:
   338 ;;		wreg, status,2, status,0
   339 ;; Tracked objects:
   340 ;;		On entry : 0/0
   341 ;;		On exit  : 0/0
   342 ;;		Unchanged: 0/0
   343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   344 ;;      Params:         0       0       0       0
   345 ;;      Locals:         0       0       0       0
   346 ;;      Temps:          0       0       0       0
   347 ;;      Totals:         0       0       0       0
   348 ;;Total ram usage:        0 bytes
   349 ;; Hardware stack levels used: 1
   350 ;; This function calls:
   351 ;;		Nothing
   352 ;; This function is called by:
   353 ;;		_main
   354 ;; This function uses a non-reentrant model
   355 ;;
   356                           
   357     07D8                     _system_init:	
   358                           ;psect for function _system_init
   359                           
   360     07D8                     l593:	
   361                           ;incstack = 0
   362                           ; Regs used in _system_init: [wreg+status,2+status,0]
   363                           
   364                           
   365                           ;main.c: 54: 
   366     07D8  1283               	bcf	3,5	;RP0=0, select bank0
   367     07D9  1303               	bcf	3,6	;RP1=0, select bank0
   368     07DA  0185               	clrf	5	;volatile
   369                           
   370                           ;main.c: 55:     OPTION_REG &= ~0x20;
   371     07DB  1283               	bcf	3,5	;RP0=0, select bank2
   372     07DC  1703               	bsf	3,6	;RP1=1, select bank2
   373     07DD  019E               	clrf	30	;volatile
   374                           
   375                           ;main.c: 56: 
   376     07DE  1683               	bsf	3,5	;RP0=1, select bank1
   377     07DF  1303               	bcf	3,6	;RP1=0, select bank1
   378     07E0  0185               	clrf	5	;volatile
   379                           
   380                           ;main.c: 58: 
   381     07E1  1283               	bcf	3,5	;RP0=0, select bank0
   382     07E2  1303               	bcf	3,6	;RP1=0, select bank0
   383     07E3  0186               	clrf	6	;volatile
   384     07E4                     l595:
   385                           
   386                           ;main.c: 59:     OPTION_REG |= 0x07;
   387     07E4  30FF               	movlw	255
   388     07E5  1683               	bsf	3,5	;RP0=1, select bank1
   389     07E6  1303               	bcf	3,6	;RP1=0, select bank1
   390     07E7  0086               	movwf	6	;volatile
   391     07E8                     l597:
   392                           
   393                           ;main.c: 61: 
   394     07E8  30F0               	movlw	240
   395     07E9  1283               	bcf	3,5	;RP0=0, select bank2
   396     07EA  1703               	bsf	3,6	;RP1=1, select bank2
   397     07EB  0095               	movwf	21	;volatile
   398                           
   399                           ;main.c: 63:     OPTION_REG &= ~0x80;
   400     07EC  1283               	bcf	3,5	;RP0=0, select bank0
   401     07ED  1303               	bcf	3,6	;RP1=0, select bank0
   402     07EE  0187               	clrf	7	;volatile
   403                           
   404                           ;main.c: 64: }
   405     07EF  1283               	bcf	3,5	;RP0=0, select bank2
   406     07F0  1703               	bsf	3,6	;RP1=1, select bank2
   407     07F1  019E               	clrf	30	;volatile
   408                           
   409                           ;main.c: 65: 
   410     07F2  1683               	bsf	3,5	;RP0=1, select bank1
   411     07F3  1303               	bcf	3,6	;RP1=0, select bank1
   412     07F4  0187               	clrf	7	;volatile
   413     07F5                     l599:
   414                           
   415                           ;main.c: 68:     int dummy;
   416     07F5  307F               	movlw	127
   417     07F6  0581               	andwf	1,f	;volatile
   418     07F7                     l601:
   419                           
   420                           ;main.c: 70: 
   421     07F7  01F3               	clrf	_raw_input
   422     07F8                     l603:
   423                           
   424                           ;main.c: 71:     raw_input = (PORTB & 0xf0);
   425     07F8  01F2               	clrf	_positive_out
   426     07F9                     l605:
   427                           
   428                           ;main.c: 72: 
   429     07F9  01F1               	clrf	_negative_out
   430     07FA                     l41:
   431     07FA  0008               	return
   432     07FB                     __end_of_system_init:
   433                           
   434                           	psect	text2
   435     07C6                     __ptext2:	
   436 ;; *************** function _process_io *****************
   437 ;; Defined at:
   438 ;;		line 88 in file "main.c"
   439 ;; Parameters:    Size  Location     Type
   440 ;;		None
   441 ;; Auto vars:     Size  Location     Type
   442 ;;  dummy           2    0        int 
   443 ;; Return value:  Size  Location     Type
   444 ;;                  1    wreg      void 
   445 ;; Registers used:
   446 ;;		wreg, status,2, status,0
   447 ;; Tracked objects:
   448 ;;		On entry : 0/0
   449 ;;		On exit  : 0/0
   450 ;;		Unchanged: 0/0
   451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   452 ;;      Params:         0       0       0       0
   453 ;;      Locals:         0       0       0       0
   454 ;;      Temps:          0       0       0       0
   455 ;;      Totals:         0       0       0       0
   456 ;;Total ram usage:        0 bytes
   457 ;; Hardware stack levels used: 1
   458 ;; This function calls:
   459 ;;		Nothing
   460 ;; This function is called by:
   461 ;;		_main
   462 ;; This function uses a non-reentrant model
   463 ;;
   464                           
   465     07C6                     _process_io:	
   466                           ;psect for function _process_io
   467                           
   468     07C6                     l609:	
   469                           ;incstack = 0
   470                           ; Regs used in _process_io: [wreg+status,2+status,0]
   471                           
   472     07C6  1283               	bcf	3,5	;RP0=0, select bank0
   473     07C7  1303               	bcf	3,6	;RP1=0, select bank0
   474     07C8  0806               	movf	6,w	;volatile
   475     07C9  00F3               	movwf	_raw_input
   476     07CA                     l611:
   477     07CA  30F0               	movlw	240
   478     07CB  05F3               	andwf	_raw_input,f
   479     07CC                     l613:
   480     07CC  30F0               	movlw	240
   481     07CD  0673               	xorwf	_raw_input,w
   482     07CE  1903               	btfsc	3,2
   483     07CF  2FD1               	goto	u11
   484     07D0  2FD2               	goto	u10
   485     07D1                     u11:
   486     07D1  2FD5               	goto	l47
   487     07D2                     u10:
   488     07D2                     l615:
   489     07D2  3010               	movlw	16
   490     07D3  0087               	movwf	7	;volatile
   491     07D4  2FD7               	goto	l49
   492     07D5                     l47:
   493     07D5  3001               	movlw	1
   494     07D6  0087               	movwf	7	;volatile
   495     07D7                     l49:
   496     07D7  0008               	return
   497     07D8                     __end_of_process_io:
   498                           
   499                           	psect	text3
   500     07B9                     __ptext3:	
   501 ;; *************** function _init_timer0 *****************
   502 ;; Defined at:
   503 ;;		line 75 in file "main.c"
   504 ;; Parameters:    Size  Location     Type
   505 ;;		None
   506 ;; Auto vars:     Size  Location     Type
   507 ;;		None
   508 ;; Return value:  Size  Location     Type
   509 ;;                  1    wreg      void 
   510 ;; Registers used:
   511 ;;		wreg, status,2, status,0
   512 ;; Tracked objects:
   513 ;;		On entry : 0/0
   514 ;;		On exit  : 0/0
   515 ;;		Unchanged: 0/0
   516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   517 ;;      Params:         0       0       0       0
   518 ;;      Locals:         0       0       0       0
   519 ;;      Temps:          0       0       0       0
   520 ;;      Totals:         0       0       0       0
   521 ;;Total ram usage:        0 bytes
   522 ;; Hardware stack levels used: 1
   523 ;; This function calls:
   524 ;;		Nothing
   525 ;; This function is called by:
   526 ;;		_main
   527 ;; This function uses a non-reentrant model
   528 ;;
   529                           
   530     07B9                     _init_timer0:	
   531                           ;psect for function _init_timer0
   532                           
   533     07B9                     l607:	
   534                           ;incstack = 0
   535                           ; Regs used in _init_timer0: [wreg+status,2+status,0]
   536                           
   537                           
   538                           ;main.c: 77:         PORTC = 0x01;
   539     07B9  30DF               	movlw	223
   540     07BA  1683               	bsf	3,5	;RP0=1, select bank1
   541     07BB  1303               	bcf	3,6	;RP1=0, select bank1
   542     07BC  0581               	andwf	1,f	;volatile
   543     07BD  30F7               	movlw	247
   544     07BE  0581               	andwf	1,f	;volatile
   545     07BF  3007               	movlw	7
   546     07C0  0481               	iorwf	1,f	;volatile
   547     07C1  30FE               	movlw	254
   548     07C2  0581               	andwf	1,f	;volatile
   549     07C3  307F               	movlw	127
   550     07C4  0581               	andwf	1,f	;volatile
   551     07C5                     l44:
   552     07C5  0008               	return
   553     07C6                     __end_of_init_timer0:
   554     0001                     ___latbits      equ	1
   555     007E                     btemp           set	126	;btemp
   556     007E                     wtemp0          set	126
   557                           
   558                           	psect	config
   559                           
   560                           ;Config register CONFIG @ 0x2007
   561                           ;	Oscillator Selection bits
   562                           ;	FOSC = INTRCIO, INTOSCIO oscillator: I/O function on RA4/OSC2/CLKOUT pin, I/O function
      +                           on RA5/OSC1/CLKIN
   563                           ;	Watchdog Timer Enable bit
   564                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   565                           ;	Power-up Timer Enable bit
   566                           ;	PWRTE = OFF, PWRT disabled
   567                           ;	MCLR Pin Function Select bit
   568                           ;	MCLRE = OFF, MCLR pin function is digital input, MCLR internally tied to VDD
   569                           ;	Code Protection bit
   570                           ;	CP = OFF, Program memory code protection is disabled
   571                           ;	Data Code Protection bit
   572                           ;	CPD = OFF, Data memory code protection is disabled
   573                           ;	Brown-out Reset Selection bits
   574                           ;	BOREN = ON, BOR enabled
   575                           ;	Internal External Switchover bit
   576                           ;	IESO = ON, Internal External Switchover mode is enabled
   577                           ;	Fail-Safe Clock Monitor Enabled bit
   578                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   579     2007                     	org	8199
   580     2007  3FD4               	dw	16340

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13      0       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            69      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _init_timer0
                         _process_io
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _process_io                                           2     2      0       0
 ---------------------------------------------------------------------------------
 (1) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_timer0
   _process_io
   _system_init

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           13      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            69      0       0      0.0%
COMMON              13      0       3     23.1%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK2               69      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       3      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Oct 01 15:14:02 2024

                     l41 07FA                       l35 07B3                       l44 07C5  
                     l47 07D5                       l49 07D7                       u10 07D2  
                     u11 07D1      __end_of_system_init 07FB                      l601 07F7  
                    l611 07CA                      l603 07F8                      l613 07CC  
                    l605 07F9                      l607 07B9                      l615 07D2  
                    l609 07C6                      l617 07AD                      l593 07D8  
                    l595 07E4                      l597 07E8                      l599 07F5  
                   _WPUB 0115                     _main 07AD                     btemp 007E  
                   start 0001                    ?_main 0000                    _ANSEL 011E  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
           ?_init_timer0 0000                    status 0003                    wtemp0 007E  
        __initialization 07FB              _system_init 07D8             __end_of_main 07B9  
                 ??_main 0000  __end_of__initialization 07FD           __pcstackCOMMON 0000  
             __pnvCOMMON 0073               __pmaintext 07AD             ?_system_init 0000  
                __ptext1 07D8                  __ptext2 07C6                  __ptext3 07B9  
   end_of_initialization 07FD               _process_io 07C6      start_initialization 07FB  
           _negative_out 0071              ?_process_io 0000            ??_init_timer0 0000  
            __pbssCOMMON 0071                ___latbits 0001      __end_of_init_timer0 07C6  
              _raw_input 0073              _init_timer0 07B9             ??_process_io 0000  
     __end_of_process_io 07D8            ??_system_init 0000               _OPTION_REG 0081  
           _positive_out 0072  
