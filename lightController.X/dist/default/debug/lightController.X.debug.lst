

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Sep 10 17:01:27 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F690
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     9                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F690 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0004                     fsr             equ	4
    49     0004                     fsr0            equ	4
    50     0000                     indf            equ	0
    51     0000                     indf0           equ	0
    52     0002                     pc              equ	2
    53     0002                     pcl             equ	2
    54     000A                     pclath          equ	10
    55     0003                     status          equ	3
    56     0000                     INDF            equ	0	;# 
    57     0001                     TMR0            equ	1	;# 
    58     0002                     PCL             equ	2	;# 
    59     0003                     STATUS          equ	3	;# 
    60     0004                     FSR             equ	4	;# 
    61     0005                     PORTA           equ	5	;# 
    62     0006                     PORTB           equ	6	;# 
    63     0007                     PORTC           equ	7	;# 
    64     000A                     PCLATH          equ	10	;# 
    65     000B                     INTCON          equ	11	;# 
    66     000C                     PIR1            equ	12	;# 
    67     000D                     PIR2            equ	13	;# 
    68     000E                     TMR1            equ	14	;# 
    69     000E                     TMR1L           equ	14	;# 
    70     000F                     TMR1H           equ	15	;# 
    71     0010                     T1CON           equ	16	;# 
    72     0011                     TMR2            equ	17	;# 
    73     0012                     T2CON           equ	18	;# 
    74     0013                     SSPBUF          equ	19	;# 
    75     0014                     SSPCON          equ	20	;# 
    76     0015                     CCPR            equ	21	;# 
    77     0015                     CCPR1L          equ	21	;# 
    78     0016                     CCPR1H          equ	22	;# 
    79     0017                     CCP1CON         equ	23	;# 
    80     0018                     RCSTA           equ	24	;# 
    81     0019                     TXREG           equ	25	;# 
    82     001A                     RCREG           equ	26	;# 
    83     001C                     PWM1CON         equ	28	;# 
    84     001D                     ECCPAS          equ	29	;# 
    85     001E                     ADRESH          equ	30	;# 
    86     001F                     ADCON0          equ	31	;# 
    87     0081                     OPTION_REG      equ	129	;# 
    88     0085                     TRISA           equ	133	;# 
    89     0086                     TRISB           equ	134	;# 
    90     0087                     TRISC           equ	135	;# 
    91     008C                     PIE1            equ	140	;# 
    92     008D                     PIE2            equ	141	;# 
    93     008E                     PCON            equ	142	;# 
    94     008F                     OSCCON          equ	143	;# 
    95     0090                     OSCTUNE         equ	144	;# 
    96     0092                     PR2             equ	146	;# 
    97     0093                     SSPADD          equ	147	;# 
    98     0093                     SSPMSK          equ	147	;# 
    99     0093                     MSK             equ	147	;# 
   100     0094                     SSPSTAT         equ	148	;# 
   101     0095                     WPUA            equ	149	;# 
   102     0095                     WPU             equ	149	;# 
   103     0096                     IOCA            equ	150	;# 
   104     0096                     IOC             equ	150	;# 
   105     0097                     WDTCON          equ	151	;# 
   106     0098                     TXSTA           equ	152	;# 
   107     0099                     SPBRG           equ	153	;# 
   108     009A                     SPBRGH          equ	154	;# 
   109     009B                     BAUDCTL         equ	155	;# 
   110     009E                     ADRESL          equ	158	;# 
   111     009F                     ADCON1          equ	159	;# 
   112     010C                     EEDAT           equ	268	;# 
   113     010C                     EEDATA          equ	268	;# 
   114     010D                     EEADR           equ	269	;# 
   115     010E                     EEDATH          equ	270	;# 
   116     010F                     EEADRH          equ	271	;# 
   117     0115                     WPUB            equ	277	;# 
   118     0116                     IOCB            equ	278	;# 
   119     0118                     VRCON           equ	280	;# 
   120     0119                     CM1CON0         equ	281	;# 
   121     011A                     CM2CON0         equ	282	;# 
   122     011B                     CM2CON1         equ	283	;# 
   123     011E                     ANSEL           equ	286	;# 
   124     011F                     ANSELH          equ	287	;# 
   125     018C                     EECON1          equ	396	;# 
   126     018D                     EECON2          equ	397	;# 
   127     019D                     PSTRCON         equ	413	;# 
   128     019E                     SRCON           equ	414	;# 
   129     0000                     INDF            equ	0	;# 
   130     0001                     TMR0            equ	1	;# 
   131     0002                     PCL             equ	2	;# 
   132     0003                     STATUS          equ	3	;# 
   133     0004                     FSR             equ	4	;# 
   134     0005                     PORTA           equ	5	;# 
   135     0006                     PORTB           equ	6	;# 
   136     0007                     PORTC           equ	7	;# 
   137     000A                     PCLATH          equ	10	;# 
   138     000B                     INTCON          equ	11	;# 
   139     000C                     PIR1            equ	12	;# 
   140     000D                     PIR2            equ	13	;# 
   141     000E                     TMR1            equ	14	;# 
   142     000E                     TMR1L           equ	14	;# 
   143     000F                     TMR1H           equ	15	;# 
   144     0010                     T1CON           equ	16	;# 
   145     0011                     TMR2            equ	17	;# 
   146     0012                     T2CON           equ	18	;# 
   147     0013                     SSPBUF          equ	19	;# 
   148     0014                     SSPCON          equ	20	;# 
   149     0015                     CCPR            equ	21	;# 
   150     0015                     CCPR1L          equ	21	;# 
   151     0016                     CCPR1H          equ	22	;# 
   152     0017                     CCP1CON         equ	23	;# 
   153     0018                     RCSTA           equ	24	;# 
   154     0019                     TXREG           equ	25	;# 
   155     001A                     RCREG           equ	26	;# 
   156     001C                     PWM1CON         equ	28	;# 
   157     001D                     ECCPAS          equ	29	;# 
   158     001E                     ADRESH          equ	30	;# 
   159     001F                     ADCON0          equ	31	;# 
   160     0081                     OPTION_REG      equ	129	;# 
   161     0085                     TRISA           equ	133	;# 
   162     0086                     TRISB           equ	134	;# 
   163     0087                     TRISC           equ	135	;# 
   164     008C                     PIE1            equ	140	;# 
   165     008D                     PIE2            equ	141	;# 
   166     008E                     PCON            equ	142	;# 
   167     008F                     OSCCON          equ	143	;# 
   168     0090                     OSCTUNE         equ	144	;# 
   169     0092                     PR2             equ	146	;# 
   170     0093                     SSPADD          equ	147	;# 
   171     0093                     SSPMSK          equ	147	;# 
   172     0093                     MSK             equ	147	;# 
   173     0094                     SSPSTAT         equ	148	;# 
   174     0095                     WPUA            equ	149	;# 
   175     0095                     WPU             equ	149	;# 
   176     0096                     IOCA            equ	150	;# 
   177     0096                     IOC             equ	150	;# 
   178     0097                     WDTCON          equ	151	;# 
   179     0098                     TXSTA           equ	152	;# 
   180     0099                     SPBRG           equ	153	;# 
   181     009A                     SPBRGH          equ	154	;# 
   182     009B                     BAUDCTL         equ	155	;# 
   183     009E                     ADRESL          equ	158	;# 
   184     009F                     ADCON1          equ	159	;# 
   185     010C                     EEDAT           equ	268	;# 
   186     010C                     EEDATA          equ	268	;# 
   187     010D                     EEADR           equ	269	;# 
   188     010E                     EEDATH          equ	270	;# 
   189     010F                     EEADRH          equ	271	;# 
   190     0115                     WPUB            equ	277	;# 
   191     0116                     IOCB            equ	278	;# 
   192     0118                     VRCON           equ	280	;# 
   193     0119                     CM1CON0         equ	281	;# 
   194     011A                     CM2CON0         equ	282	;# 
   195     011B                     CM2CON1         equ	283	;# 
   196     011E                     ANSEL           equ	286	;# 
   197     011F                     ANSELH          equ	287	;# 
   198     018C                     EECON1          equ	396	;# 
   199     018D                     EECON2          equ	397	;# 
   200     019D                     PSTRCON         equ	413	;# 
   201     019E                     SRCON           equ	414	;# 
   202                           
   203                           	psect	nvCOMMON
   204     0070                     __pnvCOMMON:
   205     0070                     _raw_input:
   206     0070                     	ds	1
   207     0071                     _output_lines_neg:
   208     0071                     	ds	1
   209     0072                     _output_lines_pos:
   210     0072                     	ds	1
   211     0007                     _PORTC          set	7
   212     0006                     _PORTB          set	6
   213     0005                     _PORTA          set	5
   214     0087                     _TRISC          set	135
   215     0086                     _TRISB          set	134
   216     0085                     _TRISA          set	133
   217                           
   218                           	psect	cinit
   219     07FA                     start_initialization:	
   220                           ; #config settings
   221                           
   222     07FA                     __initialization:
   223                           
   224                           ; Clear objects allocated to COMMON
   225     07FA  01F3               	clrf	__pbssCOMMON& (0+127)
   226     07FB  01F4               	clrf	(__pbssCOMMON+1)& (0+127)
   227     07FC  01F5               	clrf	(__pbssCOMMON+2)& (0+127)
   228     07FD                     end_of_initialization:	
   229                           ;End of C runtime variable initialization code
   230                           
   231     07FD                     __end_of__initialization:
   232     07FD  0183               	clrf	3
   233     07FE  118A  2FC2         	ljmp	_main	;jump to C main() function
   234                           
   235                           	psect	bssCOMMON
   236     0073                     __pbssCOMMON:
   237     0073                     _master_tally:
   238     0073                     	ds	1
   239     0074                     _masked_input:
   240     0074                     	ds	1
   241     0075                     _input_lines:
   242     0075                     	ds	1
   243                           
   244                           	psect	cstackCOMMON
   245     0000                     __pcstackCOMMON:
   246     0000                     ?_system_init:
   247     0000                     ?_process_io:	
   248                           ; 1 bytes @ 0x0
   249                           
   250     0000                     ?_main:	
   251                           ; 1 bytes @ 0x0
   252                           
   253     0000                     ??_system_init:	
   254                           ; 1 bytes @ 0x0
   255                           
   256     0000                     ??_process_io:	
   257                           ; 1 bytes @ 0x0
   258                           
   259     0000                     ??_main:	
   260                           ; 1 bytes @ 0x0
   261                           
   262                           
   263                           	psect	maintext
   264     07C2                     __pmaintext:	
   265                           ; 1 bytes @ 0x0
   266 ;;
   267 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   268 ;;
   269 ;; *************** function _main *****************
   270 ;; Defined at:
   271 ;;		line 33 in file "main.c"
   272 ;; Parameters:    Size  Location     Type
   273 ;;		None
   274 ;; Auto vars:     Size  Location     Type
   275 ;;		None
   276 ;; Return value:  Size  Location     Type
   277 ;;                  1    wreg      void 
   278 ;; Registers used:
   279 ;;		wreg, status,2, status,0, pclath, cstack
   280 ;; Tracked objects:
   281 ;;		On entry : B00/0
   282 ;;		On exit  : 0/0
   283 ;;		Unchanged: 0/0
   284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   285 ;;      Params:         0       0       0       0
   286 ;;      Locals:         0       0       0       0
   287 ;;      Temps:          0       0       0       0
   288 ;;      Totals:         0       0       0       0
   289 ;;Total ram usage:        0 bytes
   290 ;; Hardware stack levels required when called: 1
   291 ;; This function calls:
   292 ;;		_process_io
   293 ;;		_system_init
   294 ;; This function is called by:
   295 ;;		Startup code after reset
   296 ;; This function uses a non-reentrant model
   297 ;;
   298                           
   299     07C2                     _main:	
   300                           ;psect for function _main
   301                           
   302     07C2                     l610:	
   303                           ;incstack = 0
   304                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   305                           
   306                           
   307                           ;main.c: 35: 
   308     07C2  118A  27DF  118A   	fcall	_system_init
   309     07C5                     l612:
   310                           
   311                           ;main.c: 39:     output_lines_neg = 0;
   312     07C5  118A  27CB  118A   	fcall	_process_io
   313     07C8  2FC5               	goto	l612
   314     07C9  118A  2800         	ljmp	start
   315     07CB                     __end_of_main:
   316                           
   317                           	psect	text1
   318     07DF                     __ptext1:	
   319 ;; *************** function _system_init *****************
   320 ;; Defined at:
   321 ;;		line 47 in file "main.c"
   322 ;; Parameters:    Size  Location     Type
   323 ;;		None
   324 ;; Auto vars:     Size  Location     Type
   325 ;;		None
   326 ;; Return value:  Size  Location     Type
   327 ;;                  1    wreg      void 
   328 ;; Registers used:
   329 ;;		status,2
   330 ;; Tracked objects:
   331 ;;		On entry : 0/0
   332 ;;		On exit  : 0/0
   333 ;;		Unchanged: 0/0
   334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   335 ;;      Params:         0       0       0       0
   336 ;;      Locals:         0       0       0       0
   337 ;;      Temps:          0       0       0       0
   338 ;;      Totals:         0       0       0       0
   339 ;;Total ram usage:        0 bytes
   340 ;; Hardware stack levels used: 1
   341 ;; This function calls:
   342 ;;		Nothing
   343 ;; This function is called by:
   344 ;;		_main
   345 ;; This function uses a non-reentrant model
   346 ;;
   347                           
   348     07DF                     _system_init:	
   349                           ;psect for function _system_init
   350                           
   351     07DF                     l588:	
   352                           ;incstack = 0
   353                           ; Regs used in _system_init: [status,2]
   354                           
   355                           
   356                           ;main.c: 49: 
   357     07DF  1283               	bcf	3,5	;RP0=0, select bank0
   358     07E0  1303               	bcf	3,6	;RP1=0, select bank0
   359     07E1  0185               	clrf	5	;volatile
   360     07E2                     l590:
   361                           
   362                           ;main.c: 50: 
   363     07E2  3020               	movlw	32
   364     07E3  1683               	bsf	3,5	;RP0=1, select bank1
   365     07E4  1303               	bcf	3,6	;RP1=0, select bank1
   366     07E5  0085               	movwf	5	;volatile
   367                           
   368                           ;main.c: 52: 
   369     07E6  1283               	bcf	3,5	;RP0=0, select bank0
   370     07E7  1303               	bcf	3,6	;RP1=0, select bank0
   371     07E8  0186               	clrf	6	;volatile
   372     07E9                     l592:
   373                           
   374                           ;main.c: 53:     output_lines_pos = raw_input;
   375     07E9  30F0               	movlw	240
   376     07EA  1683               	bsf	3,5	;RP0=1, select bank1
   377     07EB  1303               	bcf	3,6	;RP1=0, select bank1
   378     07EC  0086               	movwf	6	;volatile
   379                           
   380                           ;main.c: 55: 
   381     07ED  1283               	bcf	3,5	;RP0=0, select bank0
   382     07EE  1303               	bcf	3,6	;RP1=0, select bank0
   383     07EF  0187               	clrf	7	;volatile
   384     07F0                     l594:
   385                           
   386                           ;main.c: 56: 
   387     07F0  30F0               	movlw	240
   388     07F1  1683               	bsf	3,5	;RP0=1, select bank1
   389     07F2  1303               	bcf	3,6	;RP1=0, select bank1
   390     07F3  0087               	movwf	7	;volatile
   391                           
   392                           ;main.c: 58:         master_tally = 1;
   393     07F4  01F0               	clrf	_raw_input
   394                           
   395                           ;main.c: 59:     } else {
   396     07F5  01F4               	clrf	_masked_input
   397                           
   398                           ;main.c: 60:         master_tally = 0;
   399     07F6  01F2               	clrf	_output_lines_pos
   400                           
   401                           ;main.c: 61:     }
   402     07F7  01F1               	clrf	_output_lines_neg
   403                           
   404                           ;main.c: 62: 
   405     07F8  01F3               	clrf	_master_tally
   406     07F9                     l39:
   407     07F9  0008               	return
   408     07FA                     __end_of_system_init:
   409                           
   410                           	psect	text2
   411     07CB                     __ptext2:	
   412 ;; *************** function _process_io *****************
   413 ;; Defined at:
   414 ;;		line 70 in file "main.c"
   415 ;; Parameters:    Size  Location     Type
   416 ;;		None
   417 ;; Auto vars:     Size  Location     Type
   418 ;;		None
   419 ;; Return value:  Size  Location     Type
   420 ;;                  1    wreg      void 
   421 ;; Registers used:
   422 ;;		wreg, status,2, status,0
   423 ;; Tracked objects:
   424 ;;		On entry : 0/0
   425 ;;		On exit  : 0/0
   426 ;;		Unchanged: 0/0
   427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   428 ;;      Params:         0       0       0       0
   429 ;;      Locals:         0       0       0       0
   430 ;;      Temps:          0       0       0       0
   431 ;;      Totals:         0       0       0       0
   432 ;;Total ram usage:        0 bytes
   433 ;; Hardware stack levels used: 1
   434 ;; This function calls:
   435 ;;		Nothing
   436 ;; This function is called by:
   437 ;;		_main
   438 ;; This function uses a non-reentrant model
   439 ;;
   440                           
   441     07CB                     _process_io:	
   442                           ;psect for function _process_io
   443                           
   444     07CB                     l596:	
   445                           ;incstack = 0
   446                           ; Regs used in _process_io: [wreg+status,2+status,0]
   447                           
   448     07CB  1283               	bcf	3,5	;RP0=0, select bank0
   449     07CC  1303               	bcf	3,6	;RP1=0, select bank0
   450     07CD  0807               	movf	7,w	;volatile
   451     07CE  00F0               	movwf	_raw_input
   452     07CF                     l598:
   453     07CF  30F0               	movlw	240
   454     07D0  05F0               	andwf	_raw_input,f
   455     07D1                     l600:
   456     07D1  0870               	movf	_raw_input,w
   457     07D2  00F2               	movwf	_output_lines_pos
   458     07D3                     l602:
   459     07D3  0972               	comf	_output_lines_pos,w
   460     07D4  00F1               	movwf	_output_lines_neg
   461     07D5                     l604:
   462     07D5  0871               	movf	_output_lines_neg,w
   463     07D6  1903               	btfsc	3,2
   464     07D7  2FD9               	goto	u11
   465     07D8  2FDA               	goto	u10
   466     07D9                     u11:
   467     07D9  2FDD               	goto	l608
   468     07DA                     u10:
   469     07DA                     l606:
   470     07DA  3001               	movlw	1
   471     07DB  00F3               	movwf	_master_tally
   472     07DC  2FDE               	goto	l44
   473     07DD                     l608:
   474     07DD  01F3               	clrf	_master_tally
   475     07DE                     l44:
   476     07DE  0008               	return
   477     07DF                     __end_of_process_io:
   478     0001                     ___latbits      equ	1
   479     007E                     btemp           set	126	;btemp
   480     007E                     wtemp0          set	126
   481                           
   482                           	psect	config
   483                           
   484                           ;Config register CONFIG @ 0x2007
   485                           ;	Oscillator Selection bits
   486                           ;	FOSC = EXTRCIO, RCIO oscillator: I/O function on RA4/OSC2/CLKOUT pin, RC on RA5/OSC1/C
      +                          LKIN
   487                           ;	Watchdog Timer Enable bit
   488                           ;	WDTE = ON, WDT enabled
   489                           ;	Power-up Timer Enable bit
   490                           ;	PWRTE = OFF, PWRT disabled
   491                           ;	MCLR Pin Function Select bit
   492                           ;	MCLRE = ON, MCLR pin function is MCLR
   493                           ;	Code Protection bit
   494                           ;	CP = OFF, Program memory code protection is disabled
   495                           ;	Data Code Protection bit
   496                           ;	CPD = OFF, Data memory code protection is disabled
   497                           ;	Brown-out Reset Selection bits
   498                           ;	BOREN = ON, BOR enabled
   499                           ;	Internal External Switchover bit
   500                           ;	IESO = ON, Internal External Switchover mode is enabled
   501                           ;	Fail-Safe Clock Monitor Enabled bit
   502                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   503     2007                     	org	8199
   504     2007  3FFE               	dw	16382

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      0       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                         _process_io
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _process_io                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _process_io
   _system_init

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
COMMON              14      0       6     42.9%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       6      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Sep 10 17:01:27 2024

                     l44 07DE                       l39 07F9                       u10 07DA  
                     u11 07D9      __end_of_system_init 07FA                      l600 07D1  
                    l602 07D3                      l610 07C2                      l604 07D5  
                    l612 07C5                      l606 07DA                      l608 07DD  
                    l590 07E2                      l592 07E9                      l594 07F0  
                    l596 07CB                      l588 07DF                      l598 07CF  
                   _main 07C2                     btemp 007E                     start 0000  
                  ?_main 0000                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    status 0003                    wtemp0 007E  
        __initialization 07FA              _system_init 07DF             __end_of_main 07CB  
                 ??_main 0000  __end_of__initialization 07FD           __pcstackCOMMON 0000  
             __pnvCOMMON 0070               __pmaintext 07C2             ?_system_init 0000  
                __ptext1 07DF                  __ptext2 07CB     end_of_initialization 07FD  
             _process_io 07CB      start_initialization 07FA             _masked_input 0074  
            ?_process_io 0000              __pbssCOMMON 0073                ___latbits 0001  
       _output_lines_neg 0071         _output_lines_pos 0072             _master_tally 0073  
              _raw_input 0070              _input_lines 0075             ??_process_io 0000  
     __end_of_process_io 07DF            ??_system_init 0000  
