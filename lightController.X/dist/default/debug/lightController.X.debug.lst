

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Mon Sep 30 15:30:10 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F690
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     8                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 12/10/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F690 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0004                     fsr             equ	4
    48     0004                     fsr0            equ	4
    49     0000                     indf            equ	0
    50     0000                     indf0           equ	0
    51     0002                     pc              equ	2
    52     0002                     pcl             equ	2
    53     000A                     pclath          equ	10
    54     0003                     status          equ	3
    55     0000                     INDF            equ	0	;# 
    56     0001                     TMR0            equ	1	;# 
    57     0002                     PCL             equ	2	;# 
    58     0003                     STATUS          equ	3	;# 
    59     0004                     FSR             equ	4	;# 
    60     0005                     PORTA           equ	5	;# 
    61     0006                     PORTB           equ	6	;# 
    62     0007                     PORTC           equ	7	;# 
    63     000A                     PCLATH          equ	10	;# 
    64     000B                     INTCON          equ	11	;# 
    65     000C                     PIR1            equ	12	;# 
    66     000D                     PIR2            equ	13	;# 
    67     000E                     TMR1            equ	14	;# 
    68     000E                     TMR1L           equ	14	;# 
    69     000F                     TMR1H           equ	15	;# 
    70     0010                     T1CON           equ	16	;# 
    71     0011                     TMR2            equ	17	;# 
    72     0012                     T2CON           equ	18	;# 
    73     0013                     SSPBUF          equ	19	;# 
    74     0014                     SSPCON          equ	20	;# 
    75     0015                     CCPR            equ	21	;# 
    76     0015                     CCPR1L          equ	21	;# 
    77     0016                     CCPR1H          equ	22	;# 
    78     0017                     CCP1CON         equ	23	;# 
    79     0018                     RCSTA           equ	24	;# 
    80     0019                     TXREG           equ	25	;# 
    81     001A                     RCREG           equ	26	;# 
    82     001C                     PWM1CON         equ	28	;# 
    83     001D                     ECCPAS          equ	29	;# 
    84     001E                     ADRESH          equ	30	;# 
    85     001F                     ADCON0          equ	31	;# 
    86     0081                     OPTION_REG      equ	129	;# 
    87     0085                     TRISA           equ	133	;# 
    88     0086                     TRISB           equ	134	;# 
    89     0087                     TRISC           equ	135	;# 
    90     008C                     PIE1            equ	140	;# 
    91     008D                     PIE2            equ	141	;# 
    92     008E                     PCON            equ	142	;# 
    93     008F                     OSCCON          equ	143	;# 
    94     0090                     OSCTUNE         equ	144	;# 
    95     0092                     PR2             equ	146	;# 
    96     0093                     SSPADD          equ	147	;# 
    97     0093                     SSPMSK          equ	147	;# 
    98     0093                     MSK             equ	147	;# 
    99     0094                     SSPSTAT         equ	148	;# 
   100     0095                     WPUA            equ	149	;# 
   101     0095                     WPU             equ	149	;# 
   102     0096                     IOCA            equ	150	;# 
   103     0096                     IOC             equ	150	;# 
   104     0097                     WDTCON          equ	151	;# 
   105     0098                     TXSTA           equ	152	;# 
   106     0099                     SPBRG           equ	153	;# 
   107     009A                     SPBRGH          equ	154	;# 
   108     009B                     BAUDCTL         equ	155	;# 
   109     009E                     ADRESL          equ	158	;# 
   110     009F                     ADCON1          equ	159	;# 
   111     010C                     EEDAT           equ	268	;# 
   112     010C                     EEDATA          equ	268	;# 
   113     010D                     EEADR           equ	269	;# 
   114     010E                     EEDATH          equ	270	;# 
   115     010F                     EEADRH          equ	271	;# 
   116     0115                     WPUB            equ	277	;# 
   117     0116                     IOCB            equ	278	;# 
   118     0118                     VRCON           equ	280	;# 
   119     0119                     CM1CON0         equ	281	;# 
   120     011A                     CM2CON0         equ	282	;# 
   121     011B                     CM2CON1         equ	283	;# 
   122     011E                     ANSEL           equ	286	;# 
   123     011F                     ANSELH          equ	287	;# 
   124     018C                     EECON1          equ	396	;# 
   125     018D                     EECON2          equ	397	;# 
   126     019D                     PSTRCON         equ	413	;# 
   127     019E                     SRCON           equ	414	;# 
   128     0000                     INDF            equ	0	;# 
   129     0001                     TMR0            equ	1	;# 
   130     0002                     PCL             equ	2	;# 
   131     0003                     STATUS          equ	3	;# 
   132     0004                     FSR             equ	4	;# 
   133     0005                     PORTA           equ	5	;# 
   134     0006                     PORTB           equ	6	;# 
   135     0007                     PORTC           equ	7	;# 
   136     000A                     PCLATH          equ	10	;# 
   137     000B                     INTCON          equ	11	;# 
   138     000C                     PIR1            equ	12	;# 
   139     000D                     PIR2            equ	13	;# 
   140     000E                     TMR1            equ	14	;# 
   141     000E                     TMR1L           equ	14	;# 
   142     000F                     TMR1H           equ	15	;# 
   143     0010                     T1CON           equ	16	;# 
   144     0011                     TMR2            equ	17	;# 
   145     0012                     T2CON           equ	18	;# 
   146     0013                     SSPBUF          equ	19	;# 
   147     0014                     SSPCON          equ	20	;# 
   148     0015                     CCPR            equ	21	;# 
   149     0015                     CCPR1L          equ	21	;# 
   150     0016                     CCPR1H          equ	22	;# 
   151     0017                     CCP1CON         equ	23	;# 
   152     0018                     RCSTA           equ	24	;# 
   153     0019                     TXREG           equ	25	;# 
   154     001A                     RCREG           equ	26	;# 
   155     001C                     PWM1CON         equ	28	;# 
   156     001D                     ECCPAS          equ	29	;# 
   157     001E                     ADRESH          equ	30	;# 
   158     001F                     ADCON0          equ	31	;# 
   159     0081                     OPTION_REG      equ	129	;# 
   160     0085                     TRISA           equ	133	;# 
   161     0086                     TRISB           equ	134	;# 
   162     0087                     TRISC           equ	135	;# 
   163     008C                     PIE1            equ	140	;# 
   164     008D                     PIE2            equ	141	;# 
   165     008E                     PCON            equ	142	;# 
   166     008F                     OSCCON          equ	143	;# 
   167     0090                     OSCTUNE         equ	144	;# 
   168     0092                     PR2             equ	146	;# 
   169     0093                     SSPADD          equ	147	;# 
   170     0093                     SSPMSK          equ	147	;# 
   171     0093                     MSK             equ	147	;# 
   172     0094                     SSPSTAT         equ	148	;# 
   173     0095                     WPUA            equ	149	;# 
   174     0095                     WPU             equ	149	;# 
   175     0096                     IOCA            equ	150	;# 
   176     0096                     IOC             equ	150	;# 
   177     0097                     WDTCON          equ	151	;# 
   178     0098                     TXSTA           equ	152	;# 
   179     0099                     SPBRG           equ	153	;# 
   180     009A                     SPBRGH          equ	154	;# 
   181     009B                     BAUDCTL         equ	155	;# 
   182     009E                     ADRESL          equ	158	;# 
   183     009F                     ADCON1          equ	159	;# 
   184     010C                     EEDAT           equ	268	;# 
   185     010C                     EEDATA          equ	268	;# 
   186     010D                     EEADR           equ	269	;# 
   187     010E                     EEDATH          equ	270	;# 
   188     010F                     EEADRH          equ	271	;# 
   189     0115                     WPUB            equ	277	;# 
   190     0116                     IOCB            equ	278	;# 
   191     0118                     VRCON           equ	280	;# 
   192     0119                     CM1CON0         equ	281	;# 
   193     011A                     CM2CON0         equ	282	;# 
   194     011B                     CM2CON1         equ	283	;# 
   195     011E                     ANSEL           equ	286	;# 
   196     011F                     ANSELH          equ	287	;# 
   197     018C                     EECON1          equ	396	;# 
   198     018D                     EECON2          equ	397	;# 
   199     019D                     PSTRCON         equ	413	;# 
   200     019E                     SRCON           equ	414	;# 
   201     0006                     _PORTB          set	6
   202     0005                     _PORTA          set	5
   203     0007                     _PORTC          set	7
   204     000B                     _INTCON         set	11
   205     0081                     _OPTION_REG     set	129
   206     0087                     _TRISC          set	135
   207     0086                     _TRISB          set	134
   208     0085                     _TRISA          set	133
   209     011E                     _ANSEL          set	286
   210                           
   211                           	psect	cinit
   212     07FA                     start_initialization:	
   213                           ; #config settings
   214                           
   215     07FA                     __initialization:
   216                           
   217                           ; Clear objects allocated to COMMON
   218     07FA  01F1               	clrf	__pbssCOMMON& (0+127)
   219     07FB  01F2               	clrf	(__pbssCOMMON+1)& (0+127)
   220     07FC  01F3               	clrf	(__pbssCOMMON+2)& (0+127)
   221     07FD                     end_of_initialization:	
   222                           ;End of C runtime variable initialization code
   223                           
   224     07FD                     __end_of__initialization:
   225     07FD  0183               	clrf	3
   226     07FE  118A  2FC8         	ljmp	_main	;jump to C main() function
   227                           
   228                           	psect	bssCOMMON
   229     0071                     __pbssCOMMON:
   230     0071                     _raw_input:
   231     0071                     	ds	1
   232     0072                     _negative_out:
   233     0072                     	ds	1
   234     0073                     _positive_out:
   235     0073                     	ds	1
   236                           
   237                           	psect	cstackCOMMON
   238     0000                     __pcstackCOMMON:
   239     0000                     ?_system_init:
   240     0000                     ?_init_timer0:	
   241                           ; 1 bytes @ 0x0
   242                           
   243     0000                     ?_main:	
   244                           ; 1 bytes @ 0x0
   245                           
   246     0000                     ??_system_init:	
   247                           ; 1 bytes @ 0x0
   248                           
   249     0000                     ??_init_timer0:	
   250                           ; 1 bytes @ 0x0
   251                           
   252     0000                     ??_main:	
   253                           ; 1 bytes @ 0x0
   254                           
   255                           
   256                           	psect	maintext
   257     07C8                     __pmaintext:	
   258                           ; 1 bytes @ 0x0
   259 ;;
   260 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   261 ;;
   262 ;; *************** function _main *****************
   263 ;; Defined at:
   264 ;;		line 30 in file "main.c"
   265 ;; Parameters:    Size  Location     Type
   266 ;;		None
   267 ;; Auto vars:     Size  Location     Type
   268 ;;		None
   269 ;; Return value:  Size  Location     Type
   270 ;;                  1    wreg      void 
   271 ;; Registers used:
   272 ;;		wreg, status,2, status,0, pclath, cstack
   273 ;; Tracked objects:
   274 ;;		On entry : B00/0
   275 ;;		On exit  : 0/0
   276 ;;		Unchanged: 0/0
   277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   278 ;;      Params:         0       0       0       0
   279 ;;      Locals:         0       0       0       0
   280 ;;      Temps:          0       0       0       0
   281 ;;      Totals:         0       0       0       0
   282 ;;Total ram usage:        0 bytes
   283 ;; Hardware stack levels required when called: 1
   284 ;; This function calls:
   285 ;;		_init_timer0
   286 ;;		_system_init
   287 ;; This function is called by:
   288 ;;		Startup code after reset
   289 ;; This function uses a non-reentrant model
   290 ;;
   291                           
   292     07C8                     _main:	
   293                           ;psect for function _main
   294                           
   295     07C8                     l608:	
   296                           ;incstack = 0
   297                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   298                           
   299                           
   300                           ;main.c: 32:     ANSEL = 0;
   301     07C8  118A  27DB  118A   	fcall	_system_init
   302                           
   303                           ;main.c: 34: 
   304     07CB  118A  27BD  118A   	fcall	_init_timer0
   305     07CE                     l34:
   306     07CE  1D0B               	btfss	11,2	;volatile
   307     07CF  2FD1               	goto	u11
   308     07D0  2FD2               	goto	u10
   309     07D1                     u11:
   310     07D1  2FCE               	goto	l34
   311     07D2                     u10:
   312     07D2                     l36:
   313                           
   314                           ;main.c: 42: 
   315     07D2  30E1               	movlw	225
   316     07D3  1283               	bcf	3,5	;RP0=0, select bank0
   317     07D4  1303               	bcf	3,6	;RP1=0, select bank0
   318     07D5  0087               	movwf	7	;volatile
   319     07D6                     l610:
   320                           
   321                           ;main.c: 45:     raw_input = 0;
   322     07D6  30FB               	movlw	251
   323     07D7  058B               	andwf	11,f	;volatile
   324     07D8  2FCE               	goto	l34
   325     07D9  118A  2801         	ljmp	start
   326     07DB                     __end_of_main:
   327                           
   328                           	psect	text1
   329     07DB                     __ptext1:	
   330 ;; *************** function _system_init *****************
   331 ;; Defined at:
   332 ;;		line 49 in file "main.c"
   333 ;; Parameters:    Size  Location     Type
   334 ;;		None
   335 ;; Auto vars:     Size  Location     Type
   336 ;;		None
   337 ;; Return value:  Size  Location     Type
   338 ;;                  1    wreg      void 
   339 ;; Registers used:
   340 ;;		wreg, status,2, status,0
   341 ;; Tracked objects:
   342 ;;		On entry : 0/0
   343 ;;		On exit  : 0/0
   344 ;;		Unchanged: 0/0
   345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   346 ;;      Params:         0       0       0       0
   347 ;;      Locals:         0       0       0       0
   348 ;;      Temps:          0       0       0       0
   349 ;;      Totals:         0       0       0       0
   350 ;;Total ram usage:        0 bytes
   351 ;; Hardware stack levels used: 1
   352 ;; This function calls:
   353 ;;		Nothing
   354 ;; This function is called by:
   355 ;;		_main
   356 ;; This function uses a non-reentrant model
   357 ;;
   358                           
   359     07DB                     _system_init:	
   360                           ;psect for function _system_init
   361                           
   362     07DB                     l594:	
   363                           ;incstack = 0
   364                           ; Regs used in _system_init: [wreg+status,2+status,0]
   365                           
   366                           
   367                           ;main.c: 53: 
   368     07DB  1283               	bcf	3,5	;RP0=0, select bank0
   369     07DC  1303               	bcf	3,6	;RP1=0, select bank0
   370     07DD  0185               	clrf	5	;volatile
   371                           
   372                           ;main.c: 54:     OPTION_REG &= ~0x08;
   373     07DE  1283               	bcf	3,5	;RP0=0, select bank2
   374     07DF  1703               	bsf	3,6	;RP1=1, select bank2
   375     07E0  019E               	clrf	30	;volatile
   376                           
   377                           ;main.c: 55: 
   378     07E1  1683               	bsf	3,5	;RP0=1, select bank1
   379     07E2  1303               	bcf	3,6	;RP1=0, select bank1
   380     07E3  0185               	clrf	5	;volatile
   381                           
   382                           ;main.c: 57:     OPTION_REG &= ~0x01;
   383     07E4  1283               	bcf	3,5	;RP0=0, select bank0
   384     07E5  1303               	bcf	3,6	;RP1=0, select bank0
   385     07E6  0186               	clrf	6	;volatile
   386     07E7                     l596:
   387                           
   388                           ;main.c: 58: }
   389     07E7  30F0               	movlw	240
   390     07E8  1683               	bsf	3,5	;RP0=1, select bank1
   391     07E9  1303               	bcf	3,6	;RP1=0, select bank1
   392     07EA  0086               	movwf	6	;volatile
   393                           
   394                           ;main.c: 60: void process_io(void){
   395     07EB  1283               	bcf	3,5	;RP0=0, select bank0
   396     07EC  1303               	bcf	3,6	;RP1=0, select bank0
   397     07ED  0187               	clrf	7	;volatile
   398                           
   399                           ;main.c: 61: 
   400     07EE  1283               	bcf	3,5	;RP0=0, select bank2
   401     07EF  1703               	bsf	3,6	;RP1=1, select bank2
   402     07F0  019E               	clrf	30	;volatile
   403                           
   404                           ;main.c: 62: 
   405     07F1  1683               	bsf	3,5	;RP0=1, select bank1
   406     07F2  1303               	bcf	3,6	;RP1=0, select bank1
   407     07F3  0187               	clrf	7	;volatile
   408     07F4                     l598:
   409                           
   410                           ;main.c: 65: 
   411     07F4  307F               	movlw	127
   412     07F5  0581               	andwf	1,f	;volatile
   413     07F6                     l600:
   414                           
   415                           ;main.c: 67:     negative_out = (~(positive_out >> 4)) & 0x0f;
   416     07F6  01F1               	clrf	_raw_input
   417     07F7                     l602:
   418                           
   419                           ;main.c: 68: 
   420     07F7  01F3               	clrf	_positive_out
   421     07F8                     l604:
   422                           
   423                           ;main.c: 69: 
   424     07F8  01F2               	clrf	_negative_out
   425     07F9                     l42:
   426     07F9  0008               	return
   427     07FA                     __end_of_system_init:
   428                           
   429                           	psect	text2
   430     07BD                     __ptext2:	
   431 ;; *************** function _init_timer0 *****************
   432 ;; Defined at:
   433 ;;		line 72 in file "main.c"
   434 ;; Parameters:    Size  Location     Type
   435 ;;		None
   436 ;; Auto vars:     Size  Location     Type
   437 ;;		None
   438 ;; Return value:  Size  Location     Type
   439 ;;                  1    wreg      void 
   440 ;; Registers used:
   441 ;;		wreg, status,2, status,0
   442 ;; Tracked objects:
   443 ;;		On entry : 0/0
   444 ;;		On exit  : 0/0
   445 ;;		Unchanged: 0/0
   446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   447 ;;      Params:         0       0       0       0
   448 ;;      Locals:         0       0       0       0
   449 ;;      Temps:          0       0       0       0
   450 ;;      Totals:         0       0       0       0
   451 ;;Total ram usage:        0 bytes
   452 ;; Hardware stack levels used: 1
   453 ;; This function calls:
   454 ;;		Nothing
   455 ;; This function is called by:
   456 ;;		_main
   457 ;; This function uses a non-reentrant model
   458 ;;
   459                           
   460     07BD                     _init_timer0:	
   461                           ;psect for function _init_timer0
   462                           
   463     07BD                     l606:	
   464                           ;incstack = 0
   465                           ; Regs used in _init_timer0: [wreg+status,2+status,0]
   466                           
   467                           
   468                           ;main.c: 74:         PORTA &= ~0x20;
   469     07BD  30DF               	movlw	223
   470     07BE  1683               	bsf	3,5	;RP0=1, select bank1
   471     07BF  1303               	bcf	3,6	;RP1=0, select bank1
   472     07C0  0581               	andwf	1,f	;volatile
   473                           
   474                           ;main.c: 76: 
   475     07C1  30F7               	movlw	247
   476     07C2  0581               	andwf	1,f	;volatile
   477                           
   478                           ;main.c: 78:     }
   479     07C3  3007               	movlw	7
   480     07C4  0481               	iorwf	1,f	;volatile
   481                           
   482                           ;main.c: 79: }
   483     07C5  30FE               	movlw	254
   484     07C6  0581               	andwf	1,f	;volatile
   485     07C7                     l45:
   486     07C7  0008               	return
   487     07C8                     __end_of_init_timer0:
   488     0001                     ___latbits      equ	1
   489     007E                     btemp           set	126	;btemp
   490     007E                     wtemp0          set	126
   491                           
   492                           	psect	config
   493                           
   494                           ;Config register CONFIG @ 0x2007
   495                           ;	Oscillator Selection bits
   496                           ;	FOSC = INTRCIO, INTOSCIO oscillator: I/O function on RA4/OSC2/CLKOUT pin, I/O function
      +                           on RA5/OSC1/CLKIN
   497                           ;	Watchdog Timer Enable bit
   498                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   499                           ;	Power-up Timer Enable bit
   500                           ;	PWRTE = OFF, PWRT disabled
   501                           ;	MCLR Pin Function Select bit
   502                           ;	MCLRE = OFF, MCLR pin function is digital input, MCLR internally tied to VDD
   503                           ;	Code Protection bit
   504                           ;	CP = OFF, Program memory code protection is disabled
   505                           ;	Data Code Protection bit
   506                           ;	CPD = OFF, Data memory code protection is disabled
   507                           ;	Brown-out Reset Selection bits
   508                           ;	BOREN = ON, BOR enabled
   509                           ;	Internal External Switchover bit
   510                           ;	IESO = ON, Internal External Switchover mode is enabled
   511                           ;	Fail-Safe Clock Monitor Enabled bit
   512                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   513     2007                     	org	8199
   514     2007  3FD4               	dw	16340

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13      0       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            69      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _init_timer0
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_timer0
   _system_init

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           13      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            69      0       0      0.0%
COMMON              13      0       3     23.1%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK2               69      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       3      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Mon Sep 30 15:30:10 2024

                     l42 07F9                       l34 07CE                       l36 07D2  
                     l45 07C7                       u10 07D2                       u11 07D1  
    __end_of_system_init 07FA                      l600 07F6                      l602 07F7  
                    l610 07D6                      l604 07F8                      l606 07BD  
                    l608 07C8                      l594 07DB                      l596 07E7  
                    l598 07F4                     _main 07C8                     btemp 007E  
                   start 0001                    ?_main 0000                    _ANSEL 011E  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
           ?_init_timer0 0000                    status 0003                    wtemp0 007E  
        __initialization 07FA              _system_init 07DB             __end_of_main 07DB  
                 ??_main 0000                   _INTCON 000B  __end_of__initialization 07FD  
         __pcstackCOMMON 0000               __pmaintext 07C8             ?_system_init 0000  
                __ptext1 07DB                  __ptext2 07BD     end_of_initialization 07FD  
    start_initialization 07FA             _negative_out 0072            ??_init_timer0 0000  
            __pbssCOMMON 0071                ___latbits 0001      __end_of_init_timer0 07C8  
              _raw_input 0071              _init_timer0 07BD            ??_system_init 0000  
             _OPTION_REG 0081             _positive_out 0073  
